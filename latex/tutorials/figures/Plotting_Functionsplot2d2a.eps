%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 269 575 522
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Wednesday, March 16, 2016 10:11:14 o'clock AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
362 165 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
362.000 0 l
362.000 165.000 l
0 165.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 352 155 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
10.5000 -1.00000 335.983 157.000 rc
newpath
11.5000 77.9993 m
13.2507 77.9992 l
14.7739 77.9991 l
16.4870 77.9990 l
18.2114 77.9989 l
19.9277 77.9988 l
21.5188 77.9987 l
23.1664 77.9986 l
24.8703 77.9984 l
26.5688 77.9982 l
28.3159 77.9980 l
29.8547 77.9978 l
31.5870 77.9976 l
33.3265 77.9974 l
35.0028 77.9971 l
36.5250 77.9968 l
38.3351 77.9964 l
39.8684 77.9961 l
41.6521 77.9957 l
43.2310 77.9953 l
44.9632 77.9947 l
46.6128 77.9942 l
48.3339 77.9936 l
49.9144 77.9929 l
51.6192 77.9922 l
53.3900 77.9913 l
54.9314 77.9905 l
56.5963 77.9895 l
58.3162 77.9883 l
59.9989 77.9871 l
61.6269 77.9858 l
63.4346 77.9841 l
65.0588 77.9825 l
66.7931 77.9806 l
68.3646 77.9787 l
70.0826 77.9764 l
71.6991 77.9740 l
73.3889 77.9712 l
75.0410 77.9682 l
76.7705 77.9647 l
78.4362 77.9610 l
80.1397 77.9568 l
81.8291 77.9522 l
83.3814 77.9475 l
85.1606 77.9416 l
86.7519 77.9358 l
88.4486 77.9289 l
90.0725 77.9216 l
91.8757 77.9126 l
93.4371 77.9040 l
95.2093 77.8933 l
96.8245 77.8824 l
98.5912 77.8692 l
100.115 77.8567 l
101.851 77.8410 l
103.528 77.8241 l
105.204 77.8055 l
106.874 77.7850 l
108.478 77.7632 l
110.212 77.7372 l
111.865 77.7098 l
113.604 77.6779 l
115.179 77.6459 l
116.919 77.6069 l
118.586 77.5655 l
120.249 77.5199 l
121.985 77.4671 l
123.585 77.4134 l
125.223 77.3527 l
127.032 77.2785 l
128.670 77.2039 l
130.345 77.1196 l
132.048 77.0248 l
133.614 76.9286 l
135.282 76.8157 l
136.939 76.6918 l
138.710 76.5449 l
140.274 76.4017 l
142.078 76.2188 l
143.705 76.0358 l
145.316 75.8363 l
147.048 75.5991 l
148.787 75.3348 l
150.369 75.0691 l
152.050 74.7579 l
153.689 74.4223 l
155.467 74.0192 l
157.005 73.6340 l
158.771 73.1452 l
160.432 72.6361 l
162.076 72.0792 l
163.722 71.4640 l
165.401 70.7706 l
167.180 69.9552 l
168.812 69.1269 l
170.422 68.2257 l
172.144 67.1609 l
173.862 65.9828 l
175.404 64.8168 l
177.230 63.2882 l
178.759 61.8738 l
180.546 60.0461 l
182.252 58.1088 l
183.775 56.2031 l
185.488 53.8409 l
187.213 51.2045 l
188.929 48.2950 l
190.520 45.3159 l
192.168 41.9162 l
193.872 38.0277 l
195.570 33.7347 l
197.317 28.8373 l
198.856 24.0768 l
200.588 18.1638 l
202.328 11.5741 l
204.004 4.53788 l
205.526 -2.49534 l
S
cliprestore
newpath
0 0 m
0 155.000 l
352.000 155.000 l
352.000 0 l
h
W
Q
q
0 0 1.00000 RG
10.5000 -1.00000 335.983 157.000 rc
newpath
11.5000 82.5437 m
13.2507 84.7542 l
14.7739 86.6177 l
16.4870 88.6265 l
18.2114 90.5350 l
19.9277 92.3011 l
21.5188 93.8032 l
23.1664 95.2065 l
24.8703 96.4805 l
26.5688 97.5579 l
28.3159 98.4539 l
29.8547 99.0570 l
30.7208 99.3177 l
31.5870 99.5207 l
32.4567 99.6659 l
33.3265 99.7520 l
33.7455 99.7723 l
34.1646 99.7788 l
34.5837 99.7716 l
35.0028 99.7505 l
35.7639 99.6770 l
36.5250 99.5582 l
37.4300 99.3584 l
38.3351 99.0954 l
39.8684 98.5082 l
41.6521 97.6068 l
43.2310 96.6210 l
44.9632 95.3472 l
46.6128 93.9597 l
48.3339 92.3453 l
49.9144 90.7274 l
51.6192 88.8543 l
53.3900 86.7885 l
54.9314 84.9086 l
56.5963 82.8122 l
58.3162 80.5961 l
59.9989 78.4012 l
61.6269 76.2734 l
63.4346 73.9311 l
65.0588 71.8664 l
66.7931 69.7269 l
68.3646 67.8649 l
70.0826 65.9332 l
71.6991 64.2324 l
73.3889 62.5935 l
75.0410 61.1443 l
76.7705 59.8051 l
78.4362 58.7005 l
80.1397 57.7707 l
81.8291 57.0575 l
83.3814 56.5919 l
84.2710 56.4087 l
85.1606 56.2872 l
85.5584 56.2529 l
85.9563 56.2310 l
86.3541 56.2215 l
86.7519 56.2245 l
87.1761 56.2413 l
87.6003 56.2723 l
88.0244 56.3174 l
88.4486 56.3765 l
89.2606 56.5289 l
90.0725 56.7322 l
91.8757 57.3639 l
93.4371 58.1066 l
95.2093 59.1609 l
96.8245 60.3080 l
98.5912 61.7527 l
100.115 63.1469 l
101.851 64.8855 l
103.528 66.7004 l
105.204 68.6285 l
106.874 70.6440 l
108.478 72.6501 l
110.212 74.8740 l
111.865 77.0254 l
113.604 79.2996 l
115.179 81.3467 l
116.919 83.5737 l
118.586 85.6500 l
120.249 87.6450 l
121.985 89.6257 l
123.585 91.3388 l
125.223 92.9655 l
127.032 94.5929 l
128.670 95.8981 l
130.345 97.0538 l
132.048 98.0314 l
133.614 98.7455 l
135.282 99.3047 l
136.111 99.5031 l
136.939 99.6483 l
137.382 99.7039 l
137.825 99.7443 l
138.267 99.7692 l
138.710 99.7787 l
139.101 99.7743 l
139.492 99.7580 l
139.883 99.7296 l
140.274 99.6892 l
141.176 99.5505 l
142.078 99.3486 l
143.705 98.8261 l
145.316 98.1134 l
147.048 97.1373 l
148.787 95.9491 l
150.369 94.6976 l
152.050 93.2040 l
153.689 91.5970 l
155.467 89.7067 l
157.005 87.9626 l
158.771 85.8556 l
160.432 83.7940 l
162.076 81.6954 l
163.722 79.5590 l
165.401 77.3646 l
167.180 75.0460 l
168.812 72.9491 l
170.422 70.9266 l
172.144 68.8382 l
173.862 66.8519 l
175.404 65.1695 l
177.230 63.3199 l
178.759 61.9070 l
180.546 60.4272 l
182.252 59.2034 l
183.775 58.2770 l
185.488 57.4325 l
187.213 56.8022 l
188.071 56.5729 l
188.929 56.4005 l
189.725 56.2919 l
190.520 56.2328 l
190.932 56.2218 l
191.344 56.2241 l
191.756 56.2397 l
192.168 56.2686 l
193.020 56.3706 l
193.872 56.5292 l
195.570 57.0126 l
197.317 57.7375 l
198.856 58.5609 l
200.588 59.6860 l
202.328 61.0150 l
204.004 62.4712 l
205.526 63.9303 l
207.336 65.8172 l
208.870 67.5291 l
210.654 69.6311 l
212.232 71.5726 l
213.965 73.7685 l
215.614 75.9024 l
218.916 80.2142 l
220.621 82.4172 l
222.391 84.6562 l
223.933 86.5449 l
225.598 88.5020 l
227.318 90.4136 l
229.000 92.1556 l
230.628 93.7039 l
232.436 95.2466 l
234.060 96.4600 l
235.794 97.5615 l
237.366 98.3768 l
239.084 99.0603 l
240.701 99.4989 l
241.545 99.6478 l
242.390 99.7409 l
242.803 99.7661 l
243.216 99.7779 l
243.629 99.7763 l
244.042 99.7612 l
244.907 99.6864 l
245.772 99.5531 l
246.605 99.3697 l
247.438 99.1329 l
249.141 98.4847 l
250.830 97.6302 l
252.383 96.6667 l
254.162 95.3636 l
255.753 94.0297 l
257.450 92.4467 l
259.074 90.7909 l
260.877 88.8106 l
262.439 86.9926 l
264.211 84.8343 l
265.826 82.7992 l
267.593 80.5222 l
269.117 78.5337 l
270.853 76.2646 l
272.530 74.0903 l
274.206 71.9571 l
275.876 69.8925 l
277.480 67.9856 l
279.214 66.0292 l
280.867 64.2850 l
282.606 62.5955 l
284.181 61.2105 l
285.921 59.8549 l
287.588 58.7419 l
289.250 57.8238 l
290.987 57.0796 l
292.587 56.5953 l
293.406 56.4235 l
294.225 56.3039 l
294.677 56.2604 l
295.129 56.2329 l
295.582 56.2214 l
296.034 56.2260 l
296.443 56.2441 l
296.853 56.2753 l
297.262 56.3196 l
297.672 56.3771 l
298.509 56.5352 l
299.346 56.7477 l
301.050 57.3450 l
302.615 58.0847 l
304.284 59.0668 l
305.940 60.2294 l
307.712 61.6672 l
309.276 63.0900 l
311.079 64.8940 l
312.707 66.6546 l
314.318 68.5033 l
316.050 70.5898 l
317.789 72.7653 l
319.371 74.7950 l
321.051 76.9816 l
322.691 79.1257 l
324.469 81.4369 l
326.007 83.4062 l
327.773 85.6100 l
329.434 87.6041 l
331.078 89.4849 l
332.724 91.2552 l
334.403 92.9272 l
336.182 94.5337 l
337.814 95.8413 l
339.424 96.9642 l
341.146 97.9683 l
342.864 98.7576 l
344.483 99.2996 l
S
cliprestore
newpath
0 0 m
0 155.000 l
352.000 155.000 l
352.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
11.5000 78.0000 m
344.483 78.0000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
255 96 13 15 rc
newpath
261.250 102.250 m
261.458 102.468 261.614 102.692 261.718 102.921  c
261.802 103.067 261.927 103.463 262.093 104.109  c
262.656 103.281 l
262.802 103.072 262.981 102.877 263.195 102.695  c
263.408 102.513 263.593 102.385 263.750 102.312  c
263.854 102.270 263.968 102.250 264.093 102.250  c
264.270 102.250 264.414 102.299 264.523 102.398  c
264.632 102.497 264.687 102.614 264.687 102.750  c
264.687 102.916 264.656 103.031 264.593 103.093  c
264.479 103.197 264.343 103.250 264.187 103.250  c
264.093 103.250 264.000 103.229 263.906 103.187  c
263.708 103.125 263.572 103.093 263.500 103.093  c
263.395 103.093 263.276 103.151 263.140 103.265  c
262.880 103.484 262.567 103.911 262.203 104.546  c
262.718 106.718 l
262.802 107.052 262.869 107.252 262.921 107.320  c
262.974 107.388 263.031 107.421 263.093 107.421  c
263.177 107.421 263.281 107.375 263.406 107.281  c
263.635 107.083 263.833 106.828 264.000 106.515  c
264.218 106.625 l
263.947 107.125 263.609 107.541 263.203 107.875  c
262.974 108.062 262.776 108.156 262.609 108.156  c
262.369 108.156 262.182 108.020 262.046 107.750  c
261.953 107.583 261.770 106.875 261.500 105.625  c
260.833 106.770 260.302 107.505 259.906 107.828  c
259.645 108.046 259.395 108.156 259.156 108.156  c
258.989 108.156 258.833 108.093 258.687 107.968  c
258.593 107.875 258.546 107.750 258.546 107.593  c
258.546 107.458 258.593 107.343 258.687 107.250  c
258.781 107.156 258.895 107.109 259.031 107.109  c
259.166 107.109 259.307 107.177 259.453 107.312  c
259.567 107.406 259.656 107.453 259.718 107.453  c
259.760 107.453 259.822 107.421 259.906 107.359  c
260.104 107.192 260.375 106.843 260.718 106.312  c
261.062 105.781 261.286 105.395 261.390 105.156  c
261.130 104.125 260.989 103.583 260.968 103.531  c
260.875 103.250 260.750 103.052 260.593 102.937  c
260.437 102.822 260.203 102.765 259.890 102.765  c
259.796 102.765 259.687 102.770 259.562 102.781  c
259.562 102.546 l
261.250 102.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 155.000 l
352.000 155.000 l
352.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
11.5000 78.0000 m
11.5000 80.6350 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 87 6 13 rc
newpath
16.7968 94.4375 m
8.20312 94.4375 l
8.20312 93.7656 l
16.7968 93.7656 l
16.7968 94.4375 l
h
f
Q
newpath
15.5312 90.2343 m
17.6250 89.2187 l
17.8281 89.2187 l
17.8281 96.4843 l
17.8281 96.9635 17.8489 97.2630 17.8906 97.3828  c
17.9322 97.5026 18.0156 97.5937 18.1406 97.6562  c
18.2656 97.7187 18.5208 97.7552 18.9062 97.7656  c
18.9062 98.0000 l
15.6718 98.0000 l
15.6718 97.7656 l
16.0781 97.7552 16.3411 97.7187 16.4609 97.6562  c
16.5807 97.5937 16.6640 97.5104 16.7109 97.4062  c
16.7578 97.3020 16.7812 96.9947 16.7812 96.4843  c
16.7812 91.8437 l
16.7812 91.2083 16.7604 90.8020 16.7187 90.6250  c
16.6875 90.4895 16.6328 90.3906 16.5546 90.3281  c
16.4765 90.2656 16.3802 90.2343 16.2656 90.2343  c
16.1093 90.2343 15.8958 90.3020 15.6250 90.4375  c
15.5312 90.2343 l
h
20.9687 93.7500 m
20.9687 92.7708 21.1171 91.9244 21.4140 91.2109  c
21.7109 90.4974 22.1041 89.9687 22.5937 89.6250  c
22.9791 89.3541 23.3750 89.2187 23.7812 89.2187  c
24.4375 89.2187 25.0260 89.5520 25.5468 90.2187  c
26.2031 91.0520 26.5312 92.1822 26.5312 93.6093  c
26.5312 94.6093 26.3880 95.4583 26.1015 96.1562  c
25.8151 96.8541 25.4479 97.3619 25.0000 97.6796  c
24.5520 97.9974 24.1250 98.1562 23.7187 98.1562  c
22.8958 98.1562 22.2083 97.6718 21.6562 96.7031  c
21.1979 95.8802 20.9687 94.8958 20.9687 93.7500  c
h
22.2187 93.9062 m
22.2187 95.0937 22.3645 96.0625 22.6562 96.8125  c
22.8958 97.4375 23.2552 97.7500 23.7343 97.7500  c
23.9635 97.7500 24.2005 97.6484 24.4453 97.4453  c
24.6901 97.2421 24.8750 96.8958 25.0000 96.4062  c
25.1979 95.6875 25.2968 94.6614 25.2968 93.3281  c
25.2968 92.3489 25.1927 91.5312 24.9843 90.8750  c
24.8385 90.3854 24.6406 90.0416 24.3906 89.8437  c
24.2239 89.7083 24.0156 89.6406 23.7656 89.6406  c
23.4843 89.6406 23.2291 89.7656 23.0000 90.0156  c
22.6979 90.3697 22.4921 90.9244 22.3828 91.6796  c
22.2734 92.4349 22.2187 93.1770 22.2187 93.9062  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
94.7459 78.0000 m
94.7459 80.6350 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
92 87 6 13 rc
newpath
102.796 94.4375 m
94.2031 94.4375 l
94.2031 93.7656 l
102.796 93.7656 l
102.796 94.4375 l
h
f
Q
newpath
105.640 89.3906 m
105.140 90.4687 l
102.562 90.4687 l
102.000 91.6250 l
103.114 91.7916 104.000 92.2083 104.656 92.8750  c
105.218 93.4479 105.500 94.1250 105.500 94.9062  c
105.500 95.3645 105.408 95.7864 105.226 96.1718  c
105.044 96.5572 104.812 96.8854 104.531 97.1562  c
104.250 97.4270 103.937 97.6406 103.593 97.7968  c
103.114 98.0364 102.614 98.1562 102.093 98.1562  c
101.583 98.1562 101.210 98.0677 100.976 97.8906  c
100.742 97.7135 100.625 97.5208 100.625 97.3125  c
100.625 97.1875 100.674 97.0807 100.773 96.9921  c
100.872 96.9036 100.994 96.8593 101.140 96.8593  c
101.244 96.8593 101.338 96.8750 101.421 96.9062  c
101.505 96.9375 101.645 97.0260 101.843 97.1718  c
102.166 97.3906 102.489 97.5000 102.812 97.5000  c
103.312 97.5000 103.747 97.3125 104.117 96.9375  c
104.487 96.5625 104.671 96.1041 104.671 95.5625  c
104.671 95.0416 104.505 94.5572 104.171 94.1093  c
103.838 93.6614 103.380 93.3125 102.796 93.0625  c
102.328 92.8750 101.697 92.7656 100.906 92.7343  c
102.562 89.3906 l
105.640 89.3906 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
177.991 78.0000 m
177.991 80.6350 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
175.468 92.7500 m
175.468 91.7708 175.617 90.9244 175.914 90.2109  c
176.210 89.4974 176.604 88.9687 177.093 88.6250  c
177.479 88.3541 177.875 88.2187 178.281 88.2187  c
178.937 88.2187 179.526 88.5520 180.046 89.2187  c
180.703 90.0520 181.031 91.1822 181.031 92.6093  c
181.031 93.6093 180.888 94.4583 180.601 95.1562  c
180.315 95.8541 179.947 96.3619 179.500 96.6796  c
179.052 96.9974 178.625 97.1562 178.218 97.1562  c
177.395 97.1562 176.708 96.6718 176.156 95.7031  c
175.697 94.8802 175.468 93.8958 175.468 92.7500  c
h
176.718 92.9062 m
176.718 94.0937 176.864 95.0625 177.156 95.8125  c
177.395 96.4375 177.755 96.7500 178.234 96.7500  c
178.463 96.7500 178.700 96.6484 178.945 96.4453  c
179.190 96.2421 179.375 95.8958 179.500 95.4062  c
179.697 94.6875 179.796 93.6614 179.796 92.3281  c
179.796 91.3489 179.692 90.5312 179.484 89.8750  c
179.338 89.3854 179.140 89.0416 178.890 88.8437  c
178.724 88.7083 178.515 88.6406 178.265 88.6406  c
177.984 88.6406 177.729 88.7656 177.500 89.0156  c
177.197 89.3697 176.992 89.9244 176.882 90.6796  c
176.773 91.4349 176.718 92.1770 176.718 92.9062  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
261.237 78.0000 m
261.237 80.6350 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
268.640 89.3906 m
268.140 90.4687 l
265.562 90.4687 l
265.000 91.6250 l
266.114 91.7916 267.000 92.2083 267.656 92.8750  c
268.218 93.4479 268.500 94.1250 268.500 94.9062  c
268.500 95.3645 268.408 95.7864 268.226 96.1718  c
268.044 96.5572 267.812 96.8854 267.531 97.1562  c
267.250 97.4270 266.937 97.6406 266.593 97.7968  c
266.114 98.0364 265.614 98.1562 265.093 98.1562  c
264.583 98.1562 264.210 98.0677 263.976 97.8906  c
263.742 97.7135 263.625 97.5208 263.625 97.3125  c
263.625 97.1875 263.674 97.0807 263.773 96.9921  c
263.872 96.9036 263.994 96.8593 264.140 96.8593  c
264.244 96.8593 264.338 96.8750 264.421 96.9062  c
264.505 96.9375 264.645 97.0260 264.843 97.1718  c
265.166 97.3906 265.489 97.5000 265.812 97.5000  c
266.312 97.5000 266.747 97.3125 267.117 96.9375  c
267.487 96.5625 267.671 96.1041 267.671 95.5625  c
267.671 95.0416 267.505 94.5572 267.171 94.1093  c
266.838 93.6614 266.380 93.3125 265.796 93.0625  c
265.328 92.8750 264.697 92.7656 263.906 92.7343  c
265.562 89.3906 l
268.640 89.3906 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
344.483 78.0000 m
344.483 80.6350 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
344.531 90.2343 m
346.625 89.2187 l
346.828 89.2187 l
346.828 96.4843 l
346.828 96.9635 346.849 97.2630 346.890 97.3828  c
346.932 97.5026 347.015 97.5937 347.140 97.6562  c
347.265 97.7187 347.520 97.7552 347.906 97.7656  c
347.906 98.0000 l
344.671 98.0000 l
344.671 97.7656 l
345.078 97.7552 345.341 97.7187 345.460 97.6562  c
345.580 97.5937 345.664 97.5104 345.710 97.4062  c
345.757 97.3020 345.781 96.9947 345.781 96.4843  c
345.781 91.8437 l
345.781 91.2083 345.760 90.8020 345.718 90.6250  c
345.687 90.4895 345.632 90.3906 345.554 90.3281  c
345.476 90.2656 345.380 90.2343 345.265 90.2343  c
345.109 90.2343 344.895 90.3020 344.625 90.4375  c
344.531 90.2343 l
h
349.968 93.7500 m
349.968 92.7708 350.117 91.9244 350.414 91.2109  c
350.710 90.4974 351.104 89.9687 351.593 89.6250  c
351.979 89.3541 352.375 89.2187 352.781 89.2187  c
353.437 89.2187 354.026 89.5520 354.546 90.2187  c
355.203 91.0520 355.531 92.1822 355.531 93.6093  c
355.531 94.6093 355.388 95.4583 355.101 96.1562  c
354.815 96.8541 354.447 97.3619 354.000 97.6796  c
353.552 97.9974 353.125 98.1562 352.718 98.1562  c
351.895 98.1562 351.208 97.6718 350.656 96.7031  c
350.197 95.8802 349.968 94.8958 349.968 93.7500  c
h
351.218 93.9062 m
351.218 95.0937 351.364 96.0625 351.656 96.8125  c
351.895 97.4375 352.255 97.7500 352.734 97.7500  c
352.963 97.7500 353.200 97.6484 353.445 97.4453  c
353.690 97.2421 353.875 96.8958 354.000 96.4062  c
354.197 95.6875 354.296 94.6614 354.296 93.3281  c
354.296 92.3489 354.192 91.5312 353.984 90.8750  c
353.838 90.3854 353.640 90.0416 353.390 89.8437  c
353.224 89.7083 353.015 89.6406 352.765 89.6406  c
352.484 89.6406 352.229 89.7656 352.000 90.0156  c
351.697 90.3697 351.492 90.9244 351.382 91.6796  c
351.273 92.4349 351.218 93.1770 351.218 93.9062  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
28.1491 78.0000 m
28.1491 79.3175 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
44.7983 78.0000 m
44.7983 79.3175 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
61.4475 78.0000 m
61.4475 79.3175 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
78.0967 78.0000 m
78.0967 79.3175 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
111.395 78.0000 m
111.395 79.3175 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
128.044 78.0000 m
128.044 79.3175 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
144.693 78.0000 m
144.693 79.3175 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
161.342 78.0000 m
161.342 79.3175 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
194.641 78.0000 m
194.641 79.3175 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
211.290 78.0000 m
211.290 79.3175 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
227.939 78.0000 m
227.939 79.3175 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
244.588 78.0000 m
244.588 79.3175 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
277.887 78.0000 m
277.887 79.3175 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
294.536 78.0000 m
294.536 79.3175 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
311.185 78.0000 m
311.185 79.3175 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
327.834 78.0000 m
327.834 79.3175 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
177.991 155.000 m
177.991 1.00000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
145 32 13 15 rc
newpath
151.078 38.2500 m
151.224 38.5000 151.322 38.7317 151.375 38.9453  c
151.427 39.1588 151.484 39.5781 151.546 40.2031  c
151.812 43.3281 l
152.072 43.0260 152.442 42.5416 152.921 41.8750  c
153.151 41.5520 153.437 41.1145 153.781 40.5625  c
153.989 40.2291 154.119 39.9947 154.171 39.8593  c
154.192 39.7864 154.203 39.7135 154.203 39.6406  c
154.203 39.5989 154.187 39.5625 154.156 39.5312  c
154.125 39.5000 154.046 39.4635 153.921 39.4218  c
153.796 39.3802 153.695 39.3072 153.617 39.2031  c
153.539 39.0989 153.500 38.9739 153.500 38.8281  c
153.500 38.6614 153.549 38.5234 153.648 38.4140  c
153.747 38.3046 153.875 38.2500 154.031 38.2500  c
154.218 38.2500 154.377 38.3281 154.507 38.4843  c
154.638 38.6406 154.703 38.8541 154.703 39.1250  c
154.703 39.4583 154.588 39.8411 154.359 40.2734  c
154.130 40.7057 153.690 41.3645 153.039 42.2500  c
152.388 43.1354 151.599 44.1041 150.671 45.1562  c
150.036 45.8750 149.562 46.3307 149.250 46.5234  c
148.937 46.7161 148.671 46.8125 148.453 46.8125  c
148.317 46.8125 148.200 46.7604 148.101 46.6562  c
148.002 46.5520 147.953 46.4375 147.953 46.3125  c
147.953 46.1458 148.023 45.9947 148.164 45.8593  c
148.304 45.7239 148.453 45.6562 148.609 45.6562  c
148.692 45.6562 148.765 45.6770 148.828 45.7187  c
148.859 45.7395 148.895 45.7994 148.937 45.8984  c
148.979 45.9974 149.015 46.0625 149.046 46.0937  c
149.067 46.1145 149.093 46.1250 149.125 46.1250  c
149.145 46.1250 149.187 46.1041 149.250 46.0625  c
149.489 45.9166 149.760 45.6875 150.062 45.3750  c
150.468 44.9583 150.770 44.6197 150.968 44.3593  c
150.609 40.3437 l
150.557 39.6770 150.471 39.2708 150.351 39.1250  c
150.231 38.9791 150.031 38.9062 149.750 38.9062  c
149.656 38.9062 149.494 38.9218 149.265 38.9531  c
149.218 38.7187 l
151.078 38.2500 l
h
f
Q
cliprestore
newpath
0 0 m
0 155.000 l
352.000 155.000 l
352.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
177.991 139.600 m
175.356 139.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
164 138 6 13 rc
newpath
174.796 145.437 m
166.203 145.437 l
166.203 144.765 l
174.796 144.765 l
174.796 145.437 l
h
f
Q
newpath
178.046 145.828 m
178.046 146.734 l
176.890 146.734 l
176.890 149.000 l
175.843 149.000 l
175.843 146.734 l
172.203 146.734 l
172.203 145.921 l
176.203 140.218 l
176.890 140.218 l
176.890 145.828 l
178.046 145.828 l
h
175.843 145.828 m
175.843 141.546 l
172.828 145.828 l
175.843 145.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
177.991 108.800 m
175.356 108.800 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
164 107 6 13 rc
newpath
174.796 114.437 m
166.203 114.437 l
166.203 113.765 l
174.796 113.765 l
174.796 114.437 l
h
f
Q
newpath
177.953 116.343 m
177.359 118.000 l
172.281 118.000 l
172.281 117.765 l
173.770 116.401 174.820 115.286 175.429 114.421  c
176.039 113.557 176.343 112.770 176.343 112.062  c
176.343 111.510 176.177 111.059 175.843 110.710  c
175.510 110.362 175.109 110.187 174.640 110.187  c
174.224 110.187 173.846 110.309 173.507 110.554  c
173.169 110.799 172.921 111.161 172.765 111.640  c
172.531 111.640 l
172.635 110.859 172.906 110.260 173.343 109.843  c
173.781 109.427 174.328 109.218 174.984 109.218  c
175.682 109.218 176.265 109.442 176.734 109.890  c
177.203 110.338 177.437 110.864 177.437 111.468  c
177.437 111.906 177.333 112.343 177.125 112.781  c
176.812 113.468 176.307 114.192 175.609 114.953  c
174.557 116.109 173.895 116.807 173.625 117.046  c
175.875 117.046 l
176.333 117.046 176.653 117.028 176.835 116.992  c
177.018 116.955 177.184 116.885 177.335 116.781  c
177.487 116.677 177.614 116.531 177.718 116.343  c
177.953 116.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
177.991 78.0000 m
175.356 78.0000 l
S
Q
q
0 w
newpath
177.991 47.2000 m
175.356 47.2000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
177.953 55.3437 m
177.359 57.0000 l
172.281 57.0000 l
172.281 56.7656 l
173.770 55.4010 174.820 54.2864 175.429 53.4218  c
176.039 52.5572 176.343 51.7708 176.343 51.0625  c
176.343 50.5104 176.177 50.0599 175.843 49.7109  c
175.510 49.3619 175.109 49.1875 174.640 49.1875  c
174.224 49.1875 173.846 49.3099 173.507 49.5546  c
173.169 49.7994 172.921 50.1614 172.765 50.6406  c
172.531 50.6406 l
172.635 49.8593 172.906 49.2604 173.343 48.8437  c
173.781 48.4270 174.328 48.2187 174.984 48.2187  c
175.682 48.2187 176.265 48.4427 176.734 48.8906  c
177.203 49.3385 177.437 49.8645 177.437 50.4687  c
177.437 50.9062 177.333 51.3437 177.125 51.7812  c
176.812 52.4687 176.307 53.1927 175.609 53.9531  c
174.557 55.1093 173.895 55.8072 173.625 56.0468  c
175.875 56.0468 l
176.333 56.0468 176.653 56.0286 176.835 55.9921  c
177.018 55.9557 177.184 55.8854 177.335 55.7812  c
177.487 55.6770 177.614 55.5312 177.718 55.3437  c
177.953 55.3437 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
177.991 16.4000 m
175.356 16.4000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
178.046 22.8281 m
178.046 23.7343 l
176.890 23.7343 l
176.890 26.0000 l
175.843 26.0000 l
175.843 23.7343 l
172.203 23.7343 l
172.203 22.9218 l
176.203 17.2187 l
176.890 17.2187 l
176.890 22.8281 l
178.046 22.8281 l
h
175.843 22.8281 m
175.843 18.5468 l
172.828 22.8281 l
175.843 22.8281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
177.991 124.200 m
176.674 124.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
177.991 93.3999 m
176.674 93.3999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
177.991 62.6000 m
176.674 62.6000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
177.991 31.8000 m
176.674 31.8000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
177.991 1.00000 m
176.674 1.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 362 165 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
