%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Wednesday, March 16, 2016 10:53:17 o'clock AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
0.470588 0 0.0549020 RG
7.00000 -1.00000 380.994 392.000 rc
newpath
244.246 312.200 m
385.994 195.500 l
S
newpath
91.1303 0.210327 m
92.3186 4.56970 l
93.5271 8.95260 l
94.6379 12.9364 l
95.8220 17.1358 l
96.9970 21.2548 l
98.2540 25.6077 l
99.3632 29.4032 l
100.643 33.7291 l
101.798 37.5838 l
102.940 41.3522 l
104.169 45.3537 l
105.403 49.3183 l
106.525 52.8795 l
107.718 56.6133 l
108.881 60.2093 l
110.142 64.0541 l
111.233 67.3363 l
112.487 71.0547 l
113.665 74.5003 l
114.831 77.8650 l
115.999 81.1848 l
117.190 84.5219 l
118.453 88.0052 l
119.610 91.1502 l
120.753 94.2089 l
121.974 97.4284 l
123.193 100.589 l
124.287 103.381 l
125.583 106.636 l
126.667 109.314 l
127.935 112.394 l
129.146 115.281 l
130.226 117.816 l
131.442 120.619 l
132.665 123.388 l
133.883 126.092 l
135.012 128.552 l
136.181 131.054 l
137.390 133.590 l
138.595 136.068 l
139.834 138.564 l
140.926 140.718 l
142.155 143.093 l
143.389 145.426 l
144.579 147.623 l
145.659 149.575 l
146.943 151.844 l
148.031 153.721 l
149.296 155.853 l
150.416 157.150 l
244.246 234.400 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
1.00000 w
2 J
0 j
[ 1.00000 0 0 1.00000 241.746 231.900 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -241.746 -231.900 ] concat
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
8.00000 195.500 m
385.994 195.500 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
285 217 13 15 rc
newpath
291.250 223.250 m
291.458 223.468 291.614 223.692 291.718 223.921  c
291.802 224.067 291.927 224.463 292.093 225.109  c
292.656 224.281 l
292.802 224.072 292.981 223.877 293.195 223.695  c
293.408 223.513 293.593 223.385 293.750 223.312  c
293.854 223.270 293.968 223.250 294.093 223.250  c
294.270 223.250 294.414 223.299 294.523 223.398  c
294.632 223.497 294.687 223.614 294.687 223.750  c
294.687 223.916 294.656 224.031 294.593 224.093  c
294.479 224.197 294.343 224.250 294.187 224.250  c
294.093 224.250 294.000 224.229 293.906 224.187  c
293.708 224.125 293.572 224.093 293.500 224.093  c
293.395 224.093 293.276 224.151 293.140 224.265  c
292.880 224.484 292.567 224.911 292.203 225.546  c
292.718 227.718 l
292.802 228.052 292.869 228.252 292.921 228.320  c
292.974 228.388 293.031 228.421 293.093 228.421  c
293.177 228.421 293.281 228.375 293.406 228.281  c
293.635 228.083 293.833 227.828 294.000 227.515  c
294.218 227.625 l
293.947 228.125 293.609 228.541 293.203 228.875  c
292.974 229.062 292.776 229.156 292.609 229.156  c
292.369 229.156 292.182 229.020 292.046 228.750  c
291.953 228.583 291.770 227.875 291.500 226.625  c
290.833 227.770 290.302 228.505 289.906 228.828  c
289.645 229.046 289.395 229.156 289.156 229.156  c
288.989 229.156 288.833 229.093 288.687 228.968  c
288.593 228.875 288.546 228.750 288.546 228.593  c
288.546 228.458 288.593 228.343 288.687 228.250  c
288.781 228.156 288.895 228.109 289.031 228.109  c
289.166 228.109 289.307 228.177 289.453 228.312  c
289.567 228.406 289.656 228.453 289.718 228.453  c
289.760 228.453 289.822 228.421 289.906 228.359  c
290.104 228.192 290.375 227.843 290.718 227.312  c
291.062 226.781 291.286 226.395 291.390 226.156  c
291.130 225.125 290.989 224.583 290.968 224.531  c
290.875 224.250 290.750 224.052 290.593 223.937  c
290.437 223.822 290.203 223.765 289.890 223.765  c
289.796 223.765 289.687 223.770 289.562 223.781  c
289.562 223.546 l
291.250 223.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
8.00000 195.500 m
8.00000 199.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 207 6 13 rc
newpath
16.7968 214.437 m
8.20312 214.437 l
8.20312 213.765 l
16.7968 213.765 l
16.7968 214.437 l
h
f
Q
newpath
20.0468 214.828 m
20.0468 215.734 l
18.8906 215.734 l
18.8906 218.000 l
17.8437 218.000 l
17.8437 215.734 l
14.2031 215.734 l
14.2031 214.921 l
18.2031 209.218 l
18.8906 209.218 l
18.8906 214.828 l
20.0468 214.828 l
h
17.8437 214.828 m
17.8437 210.546 l
14.8281 214.828 l
17.8437 214.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
55.2493 195.500 m
55.2493 199.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
53 207 6 13 rc
newpath
63.7968 214.437 m
55.2031 214.437 l
55.2031 213.765 l
63.7968 213.765 l
63.7968 214.437 l
h
f
Q
newpath
61.6562 211.031 m
61.9062 210.447 62.2187 210.000 62.5937 209.687  c
62.9687 209.375 63.4322 209.218 63.9843 209.218  c
64.6822 209.218 65.2135 209.442 65.5781 209.890  c
65.8593 210.224 66.0000 210.578 66.0000 210.953  c
66.0000 211.588 65.6041 212.239 64.8125 212.906  c
65.3437 213.114 65.7447 213.411 66.0156 213.796  c
66.2864 214.182 66.4218 214.635 66.4218 215.156  c
66.4218 215.895 66.1822 216.536 65.7031 217.078  c
65.0885 217.796 64.1979 218.156 63.0312 218.156  c
62.4479 218.156 62.0520 218.083 61.8437 217.937  c
61.6354 217.791 61.5312 217.635 61.5312 217.468  c
61.5312 217.343 61.5807 217.237 61.6796 217.148  c
61.7786 217.059 61.8958 217.015 62.0312 217.015  c
62.1354 217.015 62.2447 217.031 62.3593 217.062  c
62.4322 217.083 62.5963 217.158 62.8515 217.289  c
63.1067 217.419 63.2812 217.500 63.3750 217.531  c
63.5312 217.572 63.6979 217.593 63.8750 217.593  c
64.3020 217.593 64.6770 217.427 65.0000 217.093  c
65.3229 216.760 65.4843 216.364 65.4843 215.906  c
65.4843 215.572 65.4114 215.250 65.2656 214.937  c
65.1510 214.697 65.0260 214.515 64.8906 214.390  c
64.7135 214.224 64.4661 214.072 64.1484 213.937  c
63.8307 213.802 63.5052 213.734 63.1718 213.734  c
62.9687 213.734 l
62.9687 213.531 l
63.3020 213.489 63.6380 213.369 63.9765 213.171  c
64.3151 212.974 64.5599 212.737 64.7109 212.460  c
64.8619 212.184 64.9375 211.875 64.9375 211.531  c
64.9375 211.104 64.8020 210.755 64.5312 210.484  c
64.2604 210.213 63.9218 210.078 63.5156 210.078  c
62.8593 210.078 62.3125 210.427 61.8750 211.125  c
61.6562 211.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
102.498 195.500 m
102.498 199.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
100 207 6 13 rc
newpath
110.796 214.437 m
102.203 214.437 l
102.203 213.765 l
110.796 213.765 l
110.796 214.437 l
h
f
Q
newpath
113.953 216.343 m
113.359 218.000 l
108.281 218.000 l
108.281 217.765 l
109.770 216.401 110.820 215.286 111.429 214.421  c
112.039 213.557 112.343 212.770 112.343 212.062  c
112.343 211.510 112.177 211.059 111.843 210.710  c
111.510 210.362 111.109 210.187 110.640 210.187  c
110.224 210.187 109.846 210.309 109.507 210.554  c
109.169 210.799 108.921 211.161 108.765 211.640  c
108.531 211.640 l
108.635 210.859 108.906 210.260 109.343 209.843  c
109.781 209.427 110.328 209.218 110.984 209.218  c
111.682 209.218 112.265 209.442 112.734 209.890  c
113.203 210.338 113.437 210.864 113.437 211.468  c
113.437 211.906 113.333 212.343 113.125 212.781  c
112.812 213.468 112.307 214.192 111.609 214.953  c
110.557 216.109 109.895 216.807 109.625 217.046  c
111.875 217.046 l
112.333 217.046 112.653 217.028 112.835 216.992  c
113.018 216.955 113.184 216.885 113.335 216.781  c
113.487 216.677 113.614 216.531 113.718 216.343  c
113.953 216.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
149.748 195.500 m
149.748 199.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
147 207 6 13 rc
newpath
157.796 214.437 m
149.203 214.437 l
149.203 213.765 l
157.796 213.765 l
157.796 214.437 l
h
f
Q
newpath
156.531 210.234 m
158.625 209.218 l
158.828 209.218 l
158.828 216.484 l
158.828 216.963 158.849 217.263 158.890 217.382  c
158.932 217.502 159.015 217.593 159.140 217.656  c
159.265 217.718 159.520 217.755 159.906 217.765  c
159.906 218.000 l
156.671 218.000 l
156.671 217.765 l
157.078 217.755 157.341 217.718 157.460 217.656  c
157.580 217.593 157.664 217.510 157.710 217.406  c
157.757 217.302 157.781 216.994 157.781 216.484  c
157.781 211.843 l
157.781 211.208 157.760 210.802 157.718 210.625  c
157.687 210.489 157.632 210.390 157.554 210.328  c
157.476 210.265 157.380 210.234 157.265 210.234  c
157.109 210.234 156.895 210.302 156.625 210.437  c
156.531 210.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 195.500 m
196.997 199.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
193.468 211.750 m
193.468 210.770 193.617 209.924 193.914 209.210  c
194.210 208.497 194.604 207.968 195.093 207.625  c
195.479 207.354 195.875 207.218 196.281 207.218  c
196.937 207.218 197.526 207.552 198.046 208.218  c
198.703 209.052 199.031 210.182 199.031 211.609  c
199.031 212.609 198.888 213.458 198.601 214.156  c
198.315 214.854 197.947 215.362 197.500 215.679  c
197.052 215.997 196.625 216.156 196.218 216.156  c
195.395 216.156 194.708 215.671 194.156 214.703  c
193.697 213.880 193.468 212.895 193.468 211.750  c
h
194.718 211.906 m
194.718 213.093 194.864 214.062 195.156 214.812  c
195.395 215.437 195.755 215.750 196.234 215.750  c
196.463 215.750 196.700 215.648 196.945 215.445  c
197.190 215.242 197.375 214.895 197.500 214.406  c
197.697 213.687 197.796 212.661 197.796 211.328  c
197.796 210.349 197.692 209.531 197.484 208.875  c
197.338 208.385 197.140 208.041 196.890 207.843  c
196.724 207.708 196.515 207.640 196.265 207.640  c
195.984 207.640 195.729 207.765 195.500 208.015  c
195.197 208.369 194.992 208.924 194.882 209.679  c
194.773 210.434 194.718 211.177 194.718 211.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
244.246 195.500 m
244.246 199.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
247.531 210.234 m
249.625 209.218 l
249.828 209.218 l
249.828 216.484 l
249.828 216.963 249.849 217.263 249.890 217.382  c
249.932 217.502 250.015 217.593 250.140 217.656  c
250.265 217.718 250.520 217.755 250.906 217.765  c
250.906 218.000 l
247.671 218.000 l
247.671 217.765 l
248.078 217.755 248.341 217.718 248.460 217.656  c
248.580 217.593 248.664 217.510 248.710 217.406  c
248.757 217.302 248.781 216.994 248.781 216.484  c
248.781 211.843 l
248.781 211.208 248.760 210.802 248.718 210.625  c
248.687 210.489 248.632 210.390 248.554 210.328  c
248.476 210.265 248.380 210.234 248.265 210.234  c
248.109 210.234 247.895 210.302 247.625 210.437  c
247.531 210.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
291.496 195.500 m
291.496 199.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
298.953 216.343 m
298.359 218.000 l
293.281 218.000 l
293.281 217.765 l
294.770 216.401 295.820 215.286 296.429 214.421  c
297.039 213.557 297.343 212.770 297.343 212.062  c
297.343 211.510 297.177 211.059 296.843 210.710  c
296.510 210.362 296.109 210.187 295.640 210.187  c
295.224 210.187 294.846 210.309 294.507 210.554  c
294.169 210.799 293.921 211.161 293.765 211.640  c
293.531 211.640 l
293.635 210.859 293.906 210.260 294.343 209.843  c
294.781 209.427 295.328 209.218 295.984 209.218  c
296.682 209.218 297.265 209.442 297.734 209.890  c
298.203 210.338 298.437 210.864 298.437 211.468  c
298.437 211.906 298.333 212.343 298.125 212.781  c
297.812 213.468 297.307 214.192 296.609 214.953  c
295.557 216.109 294.895 216.807 294.625 217.046  c
296.875 217.046 l
297.333 217.046 297.653 217.028 297.835 216.992  c
298.018 216.955 298.184 216.885 298.335 216.781  c
298.487 216.677 298.614 216.531 298.718 216.343  c
298.953 216.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
338.745 195.500 m
338.745 199.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
340.656 211.031 m
340.906 210.447 341.218 210.000 341.593 209.687  c
341.968 209.375 342.432 209.218 342.984 209.218  c
343.682 209.218 344.213 209.442 344.578 209.890  c
344.859 210.224 345.000 210.578 345.000 210.953  c
345.000 211.588 344.604 212.239 343.812 212.906  c
344.343 213.114 344.744 213.411 345.015 213.796  c
345.286 214.182 345.421 214.635 345.421 215.156  c
345.421 215.895 345.182 216.536 344.703 217.078  c
344.088 217.796 343.197 218.156 342.031 218.156  c
341.447 218.156 341.052 218.083 340.843 217.937  c
340.635 217.791 340.531 217.635 340.531 217.468  c
340.531 217.343 340.580 217.237 340.679 217.148  c
340.778 217.059 340.895 217.015 341.031 217.015  c
341.135 217.015 341.244 217.031 341.359 217.062  c
341.432 217.083 341.596 217.158 341.851 217.289  c
342.106 217.419 342.281 217.500 342.375 217.531  c
342.531 217.572 342.697 217.593 342.875 217.593  c
343.302 217.593 343.677 217.427 344.000 217.093  c
344.322 216.760 344.484 216.364 344.484 215.906  c
344.484 215.572 344.411 215.250 344.265 214.937  c
344.151 214.697 344.026 214.515 343.890 214.390  c
343.713 214.224 343.466 214.072 343.148 213.937  c
342.830 213.802 342.505 213.734 342.171 213.734  c
341.968 213.734 l
341.968 213.531 l
342.302 213.489 342.638 213.369 342.976 213.171  c
343.315 212.974 343.559 212.737 343.710 212.460  c
343.862 212.184 343.937 211.875 343.937 211.531  c
343.937 211.104 343.802 210.755 343.531 210.484  c
343.260 210.213 342.921 210.078 342.515 210.078  c
341.859 210.078 341.312 210.427 340.875 211.125  c
340.656 211.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
385.994 195.500 m
385.994 199.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
393.046 214.828 m
393.046 215.734 l
391.890 215.734 l
391.890 218.000 l
390.843 218.000 l
390.843 215.734 l
387.203 215.734 l
387.203 214.921 l
391.203 209.218 l
391.890 209.218 l
391.890 214.828 l
393.046 214.828 l
h
390.843 214.828 m
390.843 210.546 l
387.828 214.828 l
390.843 214.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
31.6246 195.500 m
31.6246 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
78.8740 195.500 m
78.8740 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
126.123 195.500 m
126.123 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
173.372 195.500 m
173.372 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
220.622 195.500 m
220.622 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
267.871 195.500 m
267.871 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
315.120 195.500 m
315.120 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
362.370 195.500 m
362.370 197.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
196.997 390.000 m
196.997 1.00000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
159 91 13 15 rc
newpath
165.078 97.2500 m
165.224 97.5000 165.322 97.7317 165.375 97.9453  c
165.427 98.1588 165.484 98.5781 165.546 99.2031  c
165.812 102.328 l
166.072 102.026 166.442 101.541 166.921 100.875  c
167.151 100.552 167.437 100.114 167.781 99.5625  c
167.989 99.2291 168.119 98.9947 168.171 98.8593  c
168.192 98.7864 168.203 98.7135 168.203 98.6406  c
168.203 98.5989 168.187 98.5625 168.156 98.5312  c
168.125 98.5000 168.046 98.4635 167.921 98.4218  c
167.796 98.3802 167.695 98.3072 167.617 98.2031  c
167.539 98.0989 167.500 97.9739 167.500 97.8281  c
167.500 97.6614 167.549 97.5234 167.648 97.4140  c
167.747 97.3046 167.875 97.2500 168.031 97.2500  c
168.218 97.2500 168.377 97.3281 168.507 97.4843  c
168.638 97.6406 168.703 97.8541 168.703 98.1250  c
168.703 98.4583 168.588 98.8411 168.359 99.2734  c
168.130 99.7057 167.690 100.364 167.039 101.250  c
166.388 102.135 165.599 103.104 164.671 104.156  c
164.036 104.875 163.562 105.330 163.250 105.523  c
162.937 105.716 162.671 105.812 162.453 105.812  c
162.317 105.812 162.200 105.760 162.101 105.656  c
162.002 105.552 161.953 105.437 161.953 105.312  c
161.953 105.145 162.023 104.994 162.164 104.859  c
162.304 104.724 162.453 104.656 162.609 104.656  c
162.692 104.656 162.765 104.677 162.828 104.718  c
162.859 104.739 162.895 104.799 162.937 104.898  c
162.979 104.997 163.015 105.062 163.046 105.093  c
163.067 105.114 163.093 105.125 163.125 105.125  c
163.145 105.125 163.187 105.104 163.250 105.062  c
163.489 104.916 163.760 104.687 164.062 104.375  c
164.468 103.958 164.770 103.619 164.968 103.359  c
164.609 99.3437 l
164.557 98.6770 164.471 98.2708 164.351 98.1250  c
164.231 97.9791 164.031 97.9062 163.750 97.9062  c
163.656 97.9062 163.494 97.9218 163.265 97.9531  c
163.218 97.7187 l
165.078 97.2500 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
196.997 351.100 m
192.997 351.100 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
180 350 6 13 rc
newpath
190.796 357.437 m
182.203 357.437 l
182.203 356.765 l
190.796 356.765 l
190.796 357.437 l
h
f
Q
newpath
194.046 357.828 m
194.046 358.734 l
192.890 358.734 l
192.890 361.000 l
191.843 361.000 l
191.843 358.734 l
188.203 358.734 l
188.203 357.921 l
192.203 352.218 l
192.890 352.218 l
192.890 357.828 l
194.046 357.828 l
h
191.843 357.828 m
191.843 353.546 l
188.828 357.828 l
191.843 357.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 273.300 m
192.997 273.300 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
180 272 6 13 rc
newpath
190.796 279.437 m
182.203 279.437 l
182.203 278.765 l
190.796 278.765 l
190.796 279.437 l
h
f
Q
newpath
193.953 281.343 m
193.359 283.000 l
188.281 283.000 l
188.281 282.765 l
189.770 281.401 190.820 280.286 191.429 279.421  c
192.039 278.557 192.343 277.770 192.343 277.062  c
192.343 276.510 192.177 276.059 191.843 275.710  c
191.510 275.362 191.109 275.187 190.640 275.187  c
190.224 275.187 189.846 275.309 189.507 275.554  c
189.169 275.799 188.921 276.161 188.765 276.640  c
188.531 276.640 l
188.635 275.859 188.906 275.260 189.343 274.843  c
189.781 274.427 190.328 274.218 190.984 274.218  c
191.682 274.218 192.265 274.442 192.734 274.890  c
193.203 275.338 193.437 275.864 193.437 276.468  c
193.437 276.906 193.333 277.343 193.125 277.781  c
192.812 278.468 192.307 279.192 191.609 279.953  c
190.557 281.109 189.895 281.807 189.625 282.046  c
191.875 282.046 l
192.333 282.046 192.653 282.028 192.835 281.992  c
193.018 281.955 193.184 281.885 193.335 281.781  c
193.487 281.677 193.614 281.531 193.718 281.343  c
193.953 281.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 195.500 m
192.997 195.500 l
S
Q
q
0 w
newpath
196.997 117.700 m
192.997 117.700 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
193.953 125.343 m
193.359 127.000 l
188.281 127.000 l
188.281 126.765 l
189.770 125.401 190.820 124.286 191.429 123.421  c
192.039 122.557 192.343 121.770 192.343 121.062  c
192.343 120.510 192.177 120.059 191.843 119.710  c
191.510 119.362 191.109 119.187 190.640 119.187  c
190.224 119.187 189.846 119.309 189.507 119.554  c
189.169 119.799 188.921 120.161 188.765 120.640  c
188.531 120.640 l
188.635 119.859 188.906 119.260 189.343 118.843  c
189.781 118.427 190.328 118.218 190.984 118.218  c
191.682 118.218 192.265 118.442 192.734 118.890  c
193.203 119.338 193.437 119.864 193.437 120.468  c
193.437 120.906 193.333 121.343 193.125 121.781  c
192.812 122.468 192.307 123.192 191.609 123.953  c
190.557 125.109 189.895 125.807 189.625 126.046  c
191.875 126.046 l
192.333 126.046 192.653 126.028 192.835 125.992  c
193.018 125.955 193.184 125.885 193.335 125.781  c
193.487 125.677 193.614 125.531 193.718 125.343  c
193.953 125.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 39.9000 m
192.997 39.9000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
194.046 45.8281 m
194.046 46.7343 l
192.890 46.7343 l
192.890 49.0000 l
191.843 49.0000 l
191.843 46.7343 l
188.203 46.7343 l
188.203 45.9218 l
192.203 40.2187 l
192.890 40.2187 l
192.890 45.8281 l
194.046 45.8281 l
h
191.843 45.8281 m
191.843 41.5468 l
188.828 45.8281 l
191.843 45.8281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 312.200 m
194.997 312.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 234.400 m
194.997 234.400 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 156.600 m
194.997 156.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 78.7999 m
194.997 78.7999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
196.997 1.00000 m
194.997 1.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
