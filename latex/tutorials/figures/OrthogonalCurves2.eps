%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, May 23, 2020 10:26:49 PM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 1.00000 0 ] concat
[ 1.00000 0 0 1.00000 -1.00000 0 ] concat
1 0 400 400 rc
[ 1.00000 0 0 1.00000 1.00000 0 ] concat
[ 1.00000 0 0 1.00000 -1.00000 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
1.00000 0 0 RG
1.00000 -1.00000 390.000 390.000 rc
newpath
2.00000 354.062 m
2.83837 353.046 l
3.53052 352.208 l
3.84752 351.818 l
4.23699 351.340 l
4.85527 350.589 l
5.36443 349.971 l
5.86157 349.358 l
6.47398 348.604 l
6.86641 348.126 l
7.18876 347.734 l
7.86975 346.892 l
8.71098 345.853 l
8.87157 345.657 l
9.00313 345.497 l
9.87183 344.421 l
10.8089 343.260 l
10.8705 343.182 l
10.9479 343.085 l
11.8675 341.942 l
12.6077 341.023 l
12.8629 340.701 l
13.1849 340.294 l
13.8566 339.457 l
14.3957 338.786 l
14.8486 338.212 l
15.4219 337.487 l
15.8389 336.966 l
16.1724 336.549 l
16.8273 335.717 l
17.6589 334.661 l
17.8139 334.467 l
17.9375 334.312 l
18.7987 333.214 l
19.6932 332.075 l
19.7815 331.960 l
19.8959 331.812 l
20.7624 330.704 l
21.4400 329.838 l
21.7413 329.446 l
22.1329 328.937 l
22.7181 328.186 l
23.1741 327.601 l
23.6929 326.924 l
24.3699 326.040 l
24.6655 325.659 l
24.8950 325.364 l
25.6360 324.393 l
26.6022 323.127 l
26.6042 323.124 l
26.6069 323.120 l
27.5702 321.853 l
28.3022 320.890 l
28.5338 320.580 l
28.8439 320.164 l
29.4950 319.304 l
29.9878 318.653 l
30.4538 318.026 l
31.0809 317.182 l
31.4101 316.745 l
31.6582 316.416 l
32.3639 315.462 l
33.3130 314.179 l
33.3150 314.176 l
33.3179 314.172 l
34.2635 312.887 l
34.9596 311.942 l
35.2092 311.596 l
35.5549 311.118 l
36.1521 310.302 l
36.5896 309.705 l
37.0922 309.005 l
37.7919 308.031 l
38.0292 307.705 l
38.2022 307.468 l
38.9633 306.402 l
39.8000 305.231 l
39.8943 305.096 l
40.0289 304.904 l
40.8220 303.787 l
41.3853 302.994 l
41.7466 302.474 l
42.2659 301.728 l
42.6677 301.159 l
42.9514 300.757 l
43.5855 299.839 l
44.4976 298.520 l
44.4997 298.517 l
44.5028 298.512 l
45.4103 297.190 l
46.0334 296.283 l
46.3172 295.860 l
46.7398 295.231 l
47.2203 294.526 l
47.5479 294.046 l
48.1195 293.188 l
48.9768 291.902 l
49.0146 291.847 l
49.0402 291.809 l
49.9056 290.501 l
50.5200 289.572 l
50.7924 289.150 l
51.2138 288.498 l
51.6747 287.796 l
51.9772 287.335 l
52.5526 286.437 l
53.4103 285.098 l
53.4259 285.073 l
53.4508 285.033 l
54.2944 283.704 l
54.8299 282.861 l
55.1580 282.331 l
55.6878 281.475 l
56.0165 280.953 l
56.2233 280.624 l
56.8698 279.569 l
57.5943 278.387 l
57.7178 278.180 l
57.9248 277.833 l
58.5603 276.785 l
58.9458 276.150 l
59.3971 275.385 l
60.1618 274.089 l
60.2280 273.979 l
60.2677 273.913 l
61.0528 272.567 l
61.5726 271.676 l
61.8714 271.149 l
62.3988 270.218 l
62.6836 269.724 l
62.8477 269.439 l
63.4891 268.292 l
64.0989 267.202 l
64.2877 266.854 l
64.6358 266.212 l
65.0792 265.408 l
65.3239 264.965 l
65.8634 263.955 l
66.5195 262.728 l
66.6399 262.495 l
66.8728 262.045 l
67.4086 261.027 l
67.6907 260.491 l
68.1692 259.550 l
68.8288 258.254 l
68.9213 258.065 l
69.1098 257.682 l
69.6648 256.572 l
69.9423 256.017 l
70.3991 255.069 l
71.0208 253.780 l
71.1242 253.557 l
71.3468 253.078 l
71.8395 252.036 l
72.0724 251.543 l
72.5447 250.504 l
73.0892 249.306 l
73.2394 248.962 l
73.5838 248.172 l
73.9233 247.408 l
74.0743 247.069 l
74.5959 245.844 l
75.0270 244.832 l
75.2568 244.268 l
75.8208 242.884 l
75.9055 242.680 l
75.9406 242.595 l
76.5414 241.079 l
76.8270 240.358 l
77.1642 239.464 l
77.6711 238.121 l
77.7732 237.836 l
78.0578 237.042 l
78.3678 236.194 l
78.4811 235.884 l
78.9474 234.537 l
79.2554 233.647 l
79.5115 232.864 l
79.9867 231.410 l
80.0592 231.174 l
80.2948 230.409 l
80.5899 229.468 l
80.6825 229.173 l
81.1028 227.744 l
81.3404 226.936 l
81.5970 226.001 l
81.9545 224.699 l
82.0718 224.239 l
82.5247 222.462 l
82.5261 222.456 l
82.5317 222.432 l
82.9589 220.652 l
83.0615 220.225 l
83.3693 218.826 l
83.5536 217.988 l
83.7561 216.975 l
84.0010 215.751 l
84.1181 215.100 l
84.4037 213.514 l
84.4540 213.199 l
84.7616 211.277 l
84.7625 211.271 l
84.7687 211.226 l
85.0420 209.313 l
85.0810 209.040 l
85.2910 207.325 l
85.3549 206.803 l
85.5078 205.305 l
85.5832 204.566 l
85.6906 203.251 l
85.7658 202.329 l
85.8373 201.161 l
85.9028 200.092 l
85.9460 199.032 l
85.9941 197.855 l
86.0143 196.864 l
86.0397 195.618 l
86.0397 194.652 l
86.0397 193.381 l
86.0196 192.395 l
85.9941 191.144 l
85.9510 190.089 l
85.9028 188.907 l
85.8308 187.732 l
85.7658 186.670 l
85.6556 185.320 l
85.5832 184.433 l
85.4215 182.849 l
85.3549 182.196 l
85.1246 180.315 l
85.0810 179.959 l
84.7687 177.773 l
84.7616 177.722 l
84.7602 177.714 l
84.4037 175.485 l
84.3235 175.040 l
84.0010 173.248 l
83.8091 172.288 l
83.5536 171.011 l
83.2109 169.453 l
83.0615 168.774 l
82.5317 166.567 l
82.5247 166.537 l
82.5223 166.528 l
81.9545 164.300 l
81.7361 163.504 l
81.3404 162.063 l
80.8441 160.375 l
80.6825 159.826 l
80.2948 158.590 l
79.9867 157.589 l
79.8371 157.132 l
79.2554 155.352 l
78.7052 153.763 l
78.4811 153.115 l
78.0578 151.957 l
77.6711 150.878 l
77.4368 150.257 l
76.8270 148.641 l
76.0193 146.603 l
75.9406 146.404 l
75.8208 146.115 l
75.0270 144.167 l
74.4382 142.785 l
74.0743 141.930 l
73.5838 140.827 l
73.0892 139.693 l
72.6770 138.786 l
72.0724 137.456 l
71.3468 135.921 l
71.0208 135.219 l
70.7173 134.590 l
69.9423 132.982 l
69.1098 131.317 l
68.8288 130.745 l
68.5378 130.173 l
67.6907 128.508 l
66.8728 126.954 l
66.5195 126.271 l
66.1139 125.512 l
65.3239 124.034 l
64.6358 122.787 l
64.0989 121.797 l
63.4175 120.579 l
62.8477 119.560 l
62.3988 118.781 l
61.5726 117.323 l
60.4159 115.340 l
60.2677 115.086 l
60.1618 114.910 l
58.9458 112.849 l
57.9248 111.166 l
57.5943 110.612 l
57.0710 109.758 l
56.2233 108.375 l
55.6878 107.524 l
54.8299 106.138 l
53.4508 103.966 l
53.4103 103.901 l
53.3380 103.788 l
51.9772 101.664 l
51.2138 100.501 l
50.5200 99.4277 l
49.1639 97.3778 l
49.0402 97.1907 l
48.9768 97.0972 l
47.5479 94.9537 l
46.7398 93.7686 l
46.0334 92.7167 l
44.5028 90.4875 l
44.4976 90.4797 l
44.4858 90.4627 l
42.9514 88.2427 l
42.2659 87.2715 l
41.3853 86.0058 l
40.0289 84.0956 l
39.8000 83.7688 l
39.2280 82.9679 l
38.2022 81.5318 l
37.7919 80.9686 l
36.5896 79.2948 l
35.5549 77.8820 l
34.9596 77.0578 l
33.3179 74.8275 l
33.3130 74.8208 l
33.2990 74.8019 l
31.6582 72.5838 l
31.0809 71.8175 l
29.9878 70.3468 l
28.8439 68.8352 l
28.3022 68.1098 l
26.6069 65.8791 l
26.6022 65.8728 l
26.5870 65.8529 l
24.8950 63.6358 l
24.3699 62.9594 l
23.1741 61.3988 l
22.1329 60.0626 l
21.4400 59.1618 l
19.8959 57.1874 l
19.6932 56.9248 l
18.9537 55.9826 l
17.9375 54.6878 l
17.6589 54.3384 l
16.1724 52.4508 l
15.4219 51.5127 l
14.3957 50.2138 l
13.1849 48.7051 l
12.6077 47.9769 l
10.9479 45.9147 l
10.8089 45.7399 l
10.2265 45.0184 l
9.00313 43.5028 l
8.71098 43.1463 l
7.18876 41.2659 l
6.47398 40.3957 l
5.36443 39.0289 l
4.23699 37.6598 l
3.53052 36.7919 l
2.00000 34.9380 l
S
newpath
389.000 34.9380 m
388.161 35.9535 l
387.469 36.7919 l
387.152 37.1813 l
386.763 37.6598 l
386.144 38.4106 l
385.635 39.0289 l
385.138 39.6413 l
384.526 40.3957 l
384.133 40.8734 l
383.811 41.2659 l
383.130 42.1071 l
382.289 43.1463 l
382.128 43.3423 l
381.996 43.5028 l
381.128 44.5790 l
380.191 45.7399 l
380.129 45.8173 l
380.052 45.9147 l
379.132 47.0573 l
378.392 47.9769 l
378.137 48.2988 l
377.815 48.7051 l
377.143 49.5421 l
376.604 50.2138 l
376.151 50.7871 l
375.578 51.5127 l
375.161 52.0339 l
374.827 52.4508 l
374.172 53.2824 l
373.341 54.3384 l
373.186 54.5328 l
373.062 54.6878 l
372.201 55.7851 l
371.306 56.9248 l
371.218 57.0392 l
371.104 57.1874 l
370.237 58.2953 l
369.559 59.1618 l
369.258 59.5535 l
368.867 60.0626 l
368.281 60.8136 l
367.825 61.3988 l
367.307 62.0758 l
366.630 62.9594 l
366.334 63.3402 l
366.104 63.6358 l
365.364 64.6067 l
364.397 65.8728 l
364.395 65.8755 l
364.393 65.8791 l
363.429 67.1465 l
362.697 68.1098 l
362.466 68.4199 l
362.156 68.8352 l
361.504 69.6956 l
361.012 70.3468 l
360.546 70.9738 l
359.919 71.8175 l
359.589 72.2545 l
359.341 72.5838 l
358.636 73.5377 l
357.687 74.8208 l
357.684 74.8236 l
357.682 74.8275 l
356.736 76.1121 l
356.040 77.0578 l
355.790 77.4034 l
355.445 77.8820 l
354.847 78.6975 l
354.410 79.2948 l
353.907 79.9945 l
353.208 80.9686 l
352.970 81.2944 l
352.797 81.5318 l
352.036 82.5973 l
351.199 83.7688 l
351.105 83.9033 l
350.971 84.0956 l
350.177 85.2126 l
349.614 86.0058 l
349.253 86.5250 l
348.734 87.2715 l
348.332 87.8408 l
348.048 88.2427 l
347.414 89.1601 l
346.502 90.4797 l
346.500 90.4829 l
346.497 90.4875 l
345.589 91.8093 l
344.966 92.7167 l
344.682 93.1394 l
344.260 93.7686 l
343.779 94.4733 l
343.452 94.9537 l
342.880 95.8111 l
342.023 97.0972 l
341.985 97.1529 l
341.959 97.1907 l
341.094 98.4989 l
340.479 99.4277 l
340.207 99.8492 l
339.786 100.501 l
339.325 101.203 l
339.022 101.664 l
338.447 102.563 l
337.589 103.901 l
337.574 103.926 l
337.549 103.966 l
336.705 105.295 l
336.170 106.138 l
335.842 106.668 l
335.312 107.524 l
334.983 108.047 l
334.776 108.375 l
334.130 109.430 l
333.405 110.612 l
333.282 110.819 l
333.075 111.166 l
332.439 112.214 l
332.054 112.849 l
331.602 113.614 l
330.838 114.910 l
330.772 115.020 l
330.732 115.086 l
329.947 116.432 l
329.427 117.323 l
329.128 117.851 l
328.601 118.781 l
328.316 119.275 l
328.152 119.560 l
327.510 120.707 l
326.901 121.797 l
326.712 122.145 l
326.364 122.787 l
325.920 123.591 l
325.676 124.034 l
325.136 125.044 l
324.480 126.271 l
324.360 126.504 l
324.127 126.954 l
323.591 127.972 l
323.309 128.508 l
322.830 129.449 l
322.171 130.745 l
322.078 130.934 l
321.890 131.317 l
321.335 132.427 l
321.057 132.982 l
320.600 133.930 l
319.979 135.219 l
319.875 135.442 l
319.653 135.921 l
319.160 136.964 l
318.927 137.456 l
318.455 138.495 l
317.910 139.693 l
317.760 140.038 l
317.416 140.827 l
317.076 141.591 l
316.925 141.930 l
316.404 143.155 l
315.972 144.167 l
315.743 144.731 l
315.179 146.115 l
315.094 146.319 l
315.059 146.404 l
314.458 147.920 l
314.173 148.641 l
313.835 149.535 l
313.328 150.878 l
313.226 151.163 l
312.942 151.957 l
312.632 152.805 l
312.518 153.115 l
312.052 154.462 l
311.744 155.352 l
311.488 156.135 l
311.013 157.589 l
310.940 157.825 l
310.705 158.590 l
310.410 159.531 l
310.317 159.826 l
309.897 161.255 l
309.659 162.063 l
309.402 162.998 l
309.045 164.300 l
308.928 164.760 l
308.475 166.537 l
308.473 166.543 l
308.468 166.567 l
308.041 168.347 l
307.938 168.774 l
307.630 170.174 l
307.446 171.011 l
307.243 172.024 l
306.998 173.248 l
306.881 173.899 l
306.596 175.485 l
306.545 175.800 l
306.238 177.722 l
306.237 177.728 l
306.231 177.773 l
305.958 179.686 l
305.918 179.959 l
305.709 181.674 l
305.645 182.196 l
305.492 183.694 l
305.416 184.433 l
305.309 185.748 l
305.234 186.670 l
305.162 187.838 l
305.097 188.907 l
305.053 189.967 l
305.005 191.144 l
304.985 192.136 l
304.960 193.381 l
304.960 194.347 l
304.960 195.618 l
304.980 196.604 l
305.005 197.855 l
305.048 198.910 l
305.097 200.092 l
305.169 201.267 l
305.234 202.329 l
305.344 203.679 l
305.416 204.566 l
305.578 206.150 l
305.645 206.803 l
305.875 208.684 l
305.918 209.040 l
306.231 211.226 l
306.238 211.277 l
306.239 211.286 l
306.596 213.514 l
306.676 213.959 l
306.998 215.751 l
307.190 216.711 l
307.446 217.988 l
307.789 219.546 l
307.938 220.225 l
308.468 222.432 l
308.475 222.462 l
308.477 222.471 l
309.045 224.699 l
309.263 225.495 l
309.659 226.936 l
310.155 228.624 l
310.317 229.173 l
310.705 230.409 l
311.013 231.410 l
311.162 231.868 l
311.744 233.647 l
312.294 235.237 l
312.518 235.884 l
312.942 237.042 l
313.328 238.121 l
313.563 238.742 l
314.173 240.358 l
314.980 242.396 l
315.059 242.595 l
315.179 242.884 l
315.972 244.832 l
316.561 246.215 l
316.925 247.069 l
317.416 248.172 l
317.910 249.306 l
318.322 250.213 l
318.927 251.543 l
319.653 253.078 l
319.979 253.780 l
320.282 254.409 l
321.057 256.017 l
321.890 257.682 l
322.171 258.254 l
322.462 258.826 l
323.309 260.491 l
324.127 262.045 l
324.480 262.728 l
324.886 263.487 l
325.676 264.965 l
326.364 266.212 l
326.901 267.202 l
327.582 268.420 l
328.152 269.439 l
328.601 270.218 l
329.427 271.676 l
330.584 273.659 l
330.732 273.913 l
330.838 274.089 l
332.054 276.150 l
333.075 277.833 l
333.405 278.387 l
333.928 279.241 l
334.776 280.624 l
335.312 281.475 l
336.170 282.861 l
337.549 285.033 l
337.589 285.098 l
337.662 285.211 l
339.022 287.335 l
339.786 288.498 l
340.479 289.572 l
341.836 291.622 l
341.959 291.809 l
342.023 291.902 l
343.452 294.046 l
344.260 295.231 l
344.966 296.283 l
346.497 298.512 l
346.502 298.520 l
346.514 298.537 l
348.048 300.757 l
348.734 301.728 l
349.614 302.994 l
350.971 304.904 l
351.199 305.231 l
351.771 306.032 l
352.797 307.468 l
353.208 308.031 l
354.410 309.705 l
355.445 311.118 l
356.040 311.942 l
357.682 314.172 l
357.687 314.179 l
357.700 314.198 l
359.341 316.416 l
359.919 317.182 l
361.012 318.653 l
362.156 320.164 l
362.697 320.890 l
364.393 323.120 l
364.397 323.127 l
364.413 323.147 l
366.104 325.364 l
366.630 326.040 l
367.825 327.601 l
368.867 328.937 l
369.559 329.838 l
371.104 331.812 l
371.306 332.075 l
372.046 333.017 l
373.062 334.312 l
373.341 334.661 l
374.827 336.549 l
375.578 337.487 l
376.604 338.786 l
377.815 340.294 l
378.392 341.023 l
380.052 343.085 l
380.191 343.260 l
380.773 343.981 l
381.996 345.497 l
382.289 345.853 l
383.811 347.734 l
384.526 348.604 l
385.635 349.971 l
386.763 351.340 l
387.469 352.208 l
389.000 354.062 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
0 0 1.00000 RG
1.00000 -1.00000 390.000 390.000 rc
newpath
218.720 388.000 m
218.746 387.758 l
218.988 385.788 l
218.991 385.765 l
218.991 385.763 l
219.235 383.773 l
219.269 383.526 l
219.485 381.786 l
219.554 381.289 l
219.740 379.804 l
219.845 379.052 l
220.001 377.828 l
220.144 376.815 l
220.267 375.857 l
220.450 374.578 l
220.540 373.892 l
220.764 372.341 l
220.818 371.933 l
221.086 370.104 l
221.102 369.981 l
221.225 369.154 l
221.390 368.031 l
221.416 367.867 l
221.680 366.085 l
221.755 365.630 l
221.978 364.146 l
222.103 363.393 l
222.282 362.213 l
222.460 361.156 l
222.594 360.287 l
222.826 358.919 l
222.912 358.369 l
223.203 356.682 l
223.239 356.458 l
223.462 355.182 l
223.570 354.553 l
223.591 354.445 l
223.905 352.650 l
223.989 352.208 l
224.247 350.755 l
224.399 349.971 l
224.597 348.869 l
224.821 347.734 l
224.957 346.991 l
225.256 345.497 l
225.325 345.123 l
225.699 343.280 l
225.702 343.263 l
225.703 343.260 l
226.080 341.404 l
226.164 341.023 l
226.467 339.554 l
226.640 338.786 l
226.864 337.714 l
227.130 336.549 l
227.271 335.884 l
227.636 334.312 l
227.689 334.065 l
227.936 333.019 l
228.114 332.252 l
228.159 332.075 l
228.543 330.445 l
228.698 329.838 l
228.983 328.648 l
229.256 327.601 l
229.436 326.864 l
229.833 325.364 l
229.901 325.092 l
230.173 324.082 l
230.373 323.327 l
230.431 323.127 l
230.851 321.568 l
231.049 320.890 l
231.342 319.822 l
231.689 318.653 l
231.847 318.089 l
232.353 316.416 l
232.366 316.372 l
232.410 316.229 l
232.886 314.655 l
233.042 314.179 l
233.420 312.952 l
233.757 311.942 l
233.970 311.265 l
234.500 309.705 l
234.536 309.594 l
234.647 309.273 l
235.105 307.926 l
235.272 307.468 l
235.687 306.271 l
236.076 305.231 l
236.287 304.634 l
236.884 303.069 l
236.904 303.014 l
236.913 302.994 l
237.522 301.395 l
237.784 300.757 l
238.159 299.795 l
238.694 298.520 l
238.815 298.214 l
239.121 297.501 l
239.481 296.643 l
239.643 296.283 l
240.158 295.082 l
240.635 294.046 l
240.855 293.543 l
241.358 292.477 l
241.569 292.019 l
241.673 291.809 l
242.288 290.502 l
242.759 289.572 l
243.031 289.008 l
243.595 287.920 l
243.791 287.531 l
243.898 287.335 l
244.558 286.061 l
245.093 285.098 l
245.349 284.615 l
245.832 283.768 l
246.156 283.185 l
246.348 282.861 l
246.973 281.765 l
247.669 280.624 l
247.817 280.372 l
248.069 279.969 l
248.669 278.986 l
249.060 278.387 l
249.540 277.621 l
250.306 276.480 l
250.437 276.280 l
250.528 276.150 l
251.337 274.944 l
252.078 273.913 l
252.268 273.638 l
252.543 273.265 l
253.207 272.340 l
253.718 271.676 l
254.169 271.065 l
254.780 270.293 l
255.151 269.810 l
255.456 269.439 l
256.145 268.567 l
257.017 267.537 l
257.168 267.353 l
257.300 267.202 l
258.196 266.144 l
259.254 264.974 l
259.258 264.969 l
259.262 264.965 l
260.321 263.795 l
261.353 262.728 l
261.420 262.657 l
261.491 262.585 l
262.521 261.521 l
263.585 260.491 l
263.657 260.420 l
263.728 260.353 l
264.795 259.321 l
265.965 258.262 l
265.969 258.258 l
265.974 258.254 l
267.144 257.196 l
268.202 256.300 l
268.353 256.168 l
268.537 256.017 l
269.567 255.145 l
270.439 254.456 l
270.810 254.151 l
271.293 253.780 l
272.065 253.169 l
272.676 252.718 l
273.340 252.207 l
274.265 251.543 l
274.638 251.268 l
274.913 251.078 l
275.944 250.337 l
277.150 249.528 l
277.280 249.437 l
277.480 249.306 l
278.621 248.540 l
279.387 248.060 l
279.986 247.669 l
280.969 247.069 l
281.372 246.817 l
281.624 246.669 l
282.765 245.973 l
283.861 245.348 l
284.185 245.156 l
284.768 244.832 l
285.615 244.349 l
286.098 244.093 l
287.061 243.558 l
288.335 242.898 l
288.531 242.791 l
288.920 242.595 l
290.008 242.031 l
290.572 241.759 l
291.502 241.288 l
292.809 240.673 l
293.019 240.569 l
293.477 240.358 l
294.543 239.855 l
295.046 239.635 l
296.082 239.158 l
297.283 238.643 l
297.643 238.481 l
298.501 238.121 l
299.214 237.815 l
299.520 237.694 l
300.795 237.159 l
301.757 236.784 l
302.395 236.522 l
303.994 235.913 l
304.014 235.904 l
304.069 235.884 l
305.634 235.287 l
306.231 235.076 l
307.271 234.687 l
308.468 234.272 l
308.926 234.105 l
310.273 233.647 l
310.594 233.536 l
310.705 233.500 l
312.265 232.970 l
312.942 232.757 l
313.952 232.420 l
315.179 232.042 l
315.655 231.886 l
317.229 231.410 l
317.372 231.366 l
317.416 231.353 l
319.089 230.847 l
319.653 230.689 l
320.822 230.342 l
321.890 230.049 l
322.568 229.851 l
324.127 229.431 l
324.327 229.373 l
325.082 229.173 l
326.092 228.901 l
326.364 228.833 l
327.864 228.436 l
328.601 228.256 l
329.648 227.983 l
330.838 227.698 l
331.445 227.543 l
333.075 227.159 l
333.253 227.114 l
334.019 226.936 l
335.065 226.689 l
335.312 226.636 l
336.884 226.271 l
337.549 226.130 l
338.714 225.864 l
339.786 225.640 l
340.554 225.467 l
342.023 225.164 l
342.404 225.080 l
344.260 224.703 l
344.263 224.702 l
344.280 224.699 l
346.123 224.325 l
346.497 224.256 l
347.991 223.957 l
348.734 223.821 l
349.869 223.597 l
350.971 223.399 l
351.755 223.247 l
353.208 222.989 l
353.650 222.905 l
355.445 222.591 l
355.553 222.570 l
356.182 222.462 l
357.458 222.239 l
357.682 222.203 l
359.369 221.912 l
359.919 221.826 l
361.287 221.594 l
362.156 221.460 l
363.213 221.282 l
364.393 221.103 l
365.146 220.978 l
366.630 220.755 l
367.085 220.680 l
368.867 220.416 l
369.031 220.390 l
370.154 220.225 l
370.981 220.102 l
371.104 220.086 l
372.933 219.818 l
373.341 219.764 l
374.892 219.540 l
375.578 219.450 l
376.857 219.267 l
377.815 219.144 l
378.828 219.001 l
380.052 218.845 l
380.804 218.740 l
382.289 218.554 l
382.786 218.485 l
384.526 218.269 l
384.773 218.235 l
386.763 217.991 l
386.765 217.991 l
386.788 217.988 l
388.758 217.746 l
389.000 217.720 l
S
newpath
2.00000 171.280 m
2.24187 171.253 l
4.21142 171.011 l
4.23422 171.008 l
4.23699 171.008 l
6.22652 170.764 l
6.47398 170.730 l
8.21366 170.514 l
8.71098 170.445 l
10.1954 170.259 l
10.9479 170.154 l
12.1718 169.998 l
13.1849 169.855 l
14.1425 169.732 l
15.4219 169.549 l
16.1073 169.459 l
17.6589 169.235 l
18.0660 169.181 l
19.8959 168.913 l
20.0186 168.897 l
20.8452 168.774 l
21.9684 168.610 l
22.1329 168.583 l
23.9145 168.319 l
24.3699 168.244 l
25.8539 168.021 l
26.6069 167.896 l
27.7866 167.717 l
28.8439 167.539 l
29.7122 167.405 l
31.0809 167.173 l
31.6304 167.087 l
33.3179 166.796 l
33.5410 166.760 l
34.8176 166.537 l
35.4464 166.429 l
35.5549 166.408 l
37.3493 166.095 l
37.7919 166.010 l
39.2440 165.752 l
40.0289 165.600 l
41.1304 165.402 l
42.2659 165.178 l
43.0082 165.042 l
44.5028 164.744 l
44.8770 164.674 l
46.7200 164.300 l
46.7365 164.297 l
46.7398 164.296 l
48.5960 163.919 l
48.9768 163.835 l
50.4459 163.532 l
51.2138 163.360 l
52.2859 163.135 l
53.4508 162.869 l
54.1155 162.728 l
55.6878 162.363 l
55.9345 162.310 l
56.9806 162.063 l
57.7470 161.885 l
57.9248 161.841 l
59.5549 161.456 l
60.1618 161.301 l
61.3513 161.016 l
62.3988 160.743 l
63.1358 160.563 l
64.6358 160.166 l
64.9079 160.098 l
65.9174 159.826 l
66.6727 159.626 l
66.8728 159.569 l
68.4319 159.148 l
69.1098 158.950 l
70.1779 158.657 l
71.3468 158.310 l
71.9101 158.152 l
73.5838 157.646 l
73.6279 157.633 l
73.7709 157.589 l
75.3444 157.113 l
75.8208 156.957 l
77.0473 156.579 l
78.0578 156.242 l
78.7347 156.029 l
80.2948 155.499 l
80.4059 155.463 l
80.7268 155.352 l
82.0740 154.894 l
82.5317 154.727 l
83.7285 154.312 l
84.7687 153.923 l
85.3657 153.712 l
86.9308 153.115 l
86.9853 153.095 l
87.0057 153.087 l
88.6043 152.477 l
89.2427 152.215 l
90.2046 151.840 l
91.4797 151.305 l
91.7853 151.184 l
92.4984 150.878 l
93.3568 150.518 l
93.7167 150.356 l
94.9171 149.842 l
95.9537 149.364 l
96.4563 149.144 l
97.5229 148.641 l
97.9801 148.431 l
98.1907 148.326 l
99.4973 147.711 l
100.427 147.240 l
100.991 146.968 l
102.080 146.404 l
102.468 146.208 l
102.664 146.101 l
103.938 145.441 l
104.901 144.906 l
105.384 144.650 l
106.232 144.167 l
106.814 143.843 l
107.138 143.651 l
108.234 143.026 l
109.375 142.330 l
109.628 142.182 l
110.030 141.930 l
111.013 141.331 l
111.612 140.939 l
112.378 140.459 l
113.519 139.693 l
113.719 139.563 l
113.849 139.471 l
115.055 138.662 l
116.086 137.921 l
116.361 137.731 l
116.734 137.456 l
117.659 136.792 l
118.323 136.281 l
118.934 135.830 l
119.706 135.219 l
120.189 134.848 l
120.560 134.543 l
121.432 133.854 l
122.462 132.982 l
122.646 132.831 l
122.797 132.699 l
123.855 131.803 l
125.025 130.745 l
125.030 130.741 l
125.034 130.737 l
126.204 129.678 l
127.271 128.646 l
127.343 128.580 l
127.414 128.508 l
128.478 127.478 l
129.508 126.414 l
129.580 126.343 l
129.646 126.271 l
130.678 125.204 l
131.737 124.034 l
131.741 124.030 l
131.745 124.025 l
132.803 122.855 l
133.699 121.797 l
133.831 121.646 l
133.982 121.462 l
134.854 120.432 l
135.543 119.560 l
135.848 119.189 l
136.219 118.706 l
136.830 117.934 l
137.281 117.323 l
137.792 116.659 l
138.456 115.734 l
138.731 115.361 l
138.921 115.086 l
139.662 114.055 l
140.471 112.849 l
140.563 112.719 l
140.693 112.519 l
141.459 111.378 l
141.939 110.612 l
142.331 110.013 l
142.930 109.030 l
143.182 108.628 l
143.330 108.375 l
144.026 107.234 l
144.651 106.138 l
144.843 105.814 l
145.167 105.232 l
145.650 104.384 l
145.906 103.901 l
146.441 102.938 l
147.101 101.664 l
147.208 101.468 l
147.404 101.080 l
147.968 99.9916 l
148.240 99.4277 l
148.711 98.4973 l
149.326 97.1907 l
149.431 96.9801 l
149.641 96.5229 l
150.144 95.4563 l
150.364 94.9537 l
150.842 93.9171 l
151.356 92.7167 l
151.518 92.3568 l
151.878 91.4984 l
152.184 90.7853 l
152.305 90.4797 l
152.840 89.2046 l
153.215 88.2427 l
153.477 87.6044 l
154.087 86.0058 l
154.095 85.9853 l
154.115 85.9308 l
154.712 84.3657 l
154.923 83.7688 l
155.312 82.7285 l
155.727 81.5318 l
155.894 81.0740 l
156.352 79.7268 l
156.463 79.4060 l
156.499 79.2948 l
157.029 77.7347 l
157.242 77.0578 l
157.579 76.0473 l
157.957 74.8208 l
158.113 74.3444 l
158.589 72.7709 l
158.633 72.6279 l
158.646 72.5838 l
159.152 70.9101 l
159.310 70.3468 l
159.657 69.1780 l
159.950 68.1098 l
160.148 67.4319 l
160.569 65.8728 l
160.626 65.6727 l
160.826 64.9174 l
161.098 63.9079 l
161.166 63.6358 l
161.563 62.1358 l
161.743 61.3988 l
162.016 60.3513 l
162.301 59.1618 l
162.456 58.5549 l
162.841 56.9248 l
162.885 56.7470 l
163.063 55.9806 l
163.310 54.9345 l
163.363 54.6878 l
163.728 53.1155 l
163.869 52.4508 l
164.135 51.2859 l
164.360 50.2138 l
164.532 49.4459 l
164.835 47.9769 l
164.919 47.5960 l
165.296 45.7399 l
165.297 45.7365 l
165.300 45.7200 l
165.674 43.8770 l
165.744 43.5028 l
166.042 42.0082 l
166.178 41.2659 l
166.402 40.1304 l
166.600 39.0289 l
166.752 38.2440 l
167.010 36.7919 l
167.095 36.3493 l
167.408 34.5549 l
167.429 34.4464 l
167.537 33.8176 l
167.760 32.5411 l
167.796 32.3179 l
168.087 30.6304 l
168.173 30.0809 l
168.405 28.7122 l
168.539 27.8439 l
168.717 26.7866 l
168.897 25.6069 l
169.021 24.8539 l
169.244 23.3699 l
169.319 22.9144 l
169.583 21.1329 l
169.610 20.9684 l
169.774 19.8452 l
169.897 19.0186 l
169.913 18.8959 l
170.181 17.0661 l
170.235 16.6589 l
170.459 15.1073 l
170.549 14.4219 l
170.732 13.1424 l
170.855 12.1849 l
170.998 11.1718 l
171.154 9.94799 l
171.259 9.19549 l
171.445 7.71096 l
171.514 7.21368 l
171.730 5.47396 l
171.764 5.22653 l
172.008 3.23700 l
172.008 3.23422 l
172.011 3.21142 l
172.253 1.24188 l
172.280 1.00000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
2.00000 194.500 m
389.000 194.500 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
283 218 18 17 rc
newpath
291.593 225.375 m
291.833 225.625 292.015 225.880 292.140 226.140  c
292.234 226.307 292.380 226.765 292.578 227.515  c
293.218 226.546 l
293.385 226.317 293.591 226.096 293.835 225.882  c
294.080 225.669 294.296 225.520 294.484 225.437  c
294.599 225.395 294.729 225.375 294.875 225.375  c
295.083 225.375 295.250 225.429 295.375 225.539  c
295.500 225.648 295.562 225.786 295.562 225.953  c
295.562 226.140 295.526 226.265 295.453 226.328  c
295.317 226.453 295.161 226.515 294.984 226.515  c
294.880 226.515 294.770 226.494 294.656 226.453  c
294.427 226.369 294.270 226.328 294.187 226.328  c
294.072 226.328 293.937 226.395 293.781 226.531  c
293.479 226.791 293.114 227.286 292.687 228.015  c
293.296 230.531 l
293.390 230.916 293.468 231.145 293.531 231.218  c
293.593 231.291 293.656 231.328 293.718 231.328  c
293.822 231.328 293.942 231.276 294.078 231.171  c
294.349 230.942 294.578 230.645 294.765 230.281  c
295.015 230.421 l
294.713 230.994 294.322 231.474 293.843 231.859  c
293.583 232.067 293.359 232.171 293.171 232.171  c
292.890 232.171 292.671 232.020 292.515 231.718  c
292.411 231.520 292.197 230.697 291.875 229.250  c
291.114 230.572 290.505 231.427 290.046 231.812  c
289.744 232.052 289.458 232.171 289.187 232.171  c
288.989 232.171 288.807 232.104 288.640 231.968  c
288.526 231.854 288.468 231.708 288.468 231.531  c
288.468 231.375 288.523 231.242 288.632 231.132  c
288.742 231.023 288.875 230.968 289.031 230.968  c
289.187 230.968 289.354 231.046 289.531 231.203  c
289.656 231.317 289.755 231.375 289.828 231.375  c
289.880 231.375 289.953 231.333 290.046 231.250  c
290.276 231.062 290.588 230.661 290.984 230.046  c
291.380 229.432 291.640 228.989 291.765 228.718  c
291.463 227.531 291.296 226.906 291.265 226.843  c
291.161 226.520 291.018 226.294 290.835 226.164  c
290.653 226.033 290.385 225.968 290.031 225.968  c
289.916 225.968 289.786 225.974 289.640 225.984  c
289.640 225.718 l
291.593 225.375 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
1.00000 w
2 J
0 j
newpath
40.7000 194.500 m
40.7000 198.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 47.0000 214.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -47.0000 -214.000 ] concat
q
38 206 8 16 rc
newpath
50.4531 214.890 m
40.5468 214.890 l
40.5468 214.109 l
50.4531 214.109 l
50.4531 214.890 l
h
f
Q
newpath
54.9843 215.343 m
54.9843 216.375 l
53.6406 216.375 l
53.6406 219.000 l
52.4375 219.000 l
52.4375 216.375 l
48.2343 216.375 l
48.2343 215.437 l
52.8437 208.859 l
53.6406 208.859 l
53.6406 215.343 l
54.9843 215.343 l
h
52.4375 215.343 m
52.4375 210.406 l
48.9531 215.343 l
52.4375 215.343 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
118.100 194.500 m
118.100 198.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 124.000 214.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -124.000 -214.000 ] concat
q
116 206 8 16 rc
newpath
128.453 214.890 m
118.546 214.890 l
118.546 214.109 l
128.453 214.109 l
128.453 214.890 l
h
f
Q
newpath
132.875 217.093 m
132.187 219.000 l
126.328 219.000 l
126.328 218.734 l
128.046 217.161 129.257 215.875 129.960 214.875  c
130.664 213.875 131.015 212.963 131.015 212.140  c
131.015 211.515 130.822 211.000 130.437 210.593  c
130.052 210.187 129.588 209.984 129.046 209.984  c
128.567 209.984 128.132 210.127 127.742 210.414  c
127.351 210.700 127.062 211.119 126.875 211.671  c
126.609 211.671 l
126.734 210.765 127.049 210.070 127.554 209.585  c
128.059 209.101 128.687 208.859 129.437 208.859  c
130.250 208.859 130.924 209.119 131.460 209.640  c
131.997 210.161 132.265 210.770 132.265 211.468  c
132.265 211.968 132.151 212.474 131.921 212.984  c
131.557 213.776 130.968 214.609 130.156 215.484  c
128.947 216.817 128.187 217.619 127.875 217.890  c
130.468 217.890 l
131.000 217.890 131.372 217.872 131.585 217.835  c
131.799 217.799 131.992 217.721 132.164 217.601  c
132.335 217.481 132.484 217.312 132.609 217.093  c
132.875 217.093 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
195.500 194.500 m
195.500 198.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 201.000 214.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -201.000 -214.000 ] concat
newpath
190.546 212.093 m
190.546 210.958 190.716 209.981 191.054 209.164  c
191.393 208.346 191.849 207.739 192.421 207.343  c
192.859 207.020 193.312 206.859 193.781 206.859  c
194.541 206.859 195.224 207.250 195.828 208.031  c
196.588 208.989 196.968 210.291 196.968 211.937  c
196.968 213.093 196.802 214.072 196.468 214.875  c
196.135 215.677 195.710 216.260 195.195 216.625  c
194.679 216.989 194.182 217.171 193.703 217.171  c
192.755 217.171 191.968 216.614 191.343 215.500  c
190.812 214.552 190.546 213.416 190.546 212.093  c
h
191.984 212.281 m
191.984 213.645 192.151 214.760 192.484 215.625  c
192.765 216.354 193.182 216.718 193.734 216.718  c
193.994 216.718 194.265 216.599 194.546 216.359  c
194.828 216.119 195.041 215.724 195.187 215.171  c
195.416 214.328 195.531 213.140 195.531 211.609  c
195.531 210.484 195.411 209.541 195.171 208.781  c
195.005 208.218 194.781 207.822 194.500 207.593  c
194.302 207.427 194.057 207.343 193.765 207.343  c
193.442 207.343 193.151 207.494 192.890 207.796  c
192.536 208.203 192.296 208.841 192.171 209.710  c
192.046 210.580 191.984 211.437 191.984 212.281  c
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
272.900 194.500 m
272.900 198.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 279.000 214.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -279.000 -214.000 ] concat
newpath
281.875 217.093 m
281.187 219.000 l
275.328 219.000 l
275.328 218.734 l
277.046 217.161 278.257 215.875 278.960 214.875  c
279.664 213.875 280.015 212.963 280.015 212.140  c
280.015 211.515 279.822 211.000 279.437 210.593  c
279.052 210.187 278.588 209.984 278.046 209.984  c
277.567 209.984 277.132 210.127 276.742 210.414  c
276.351 210.700 276.062 211.119 275.875 211.671  c
275.609 211.671 l
275.734 210.765 276.049 210.070 276.554 209.585  c
277.059 209.101 277.687 208.859 278.437 208.859  c
279.250 208.859 279.924 209.119 280.460 209.640  c
280.997 210.161 281.265 210.770 281.265 211.468  c
281.265 211.968 281.151 212.474 280.921 212.984  c
280.557 213.776 279.968 214.609 279.156 215.484  c
277.947 216.817 277.187 217.619 276.875 217.890  c
279.468 217.890 l
280.000 217.890 280.372 217.872 280.585 217.835  c
280.799 217.799 280.992 217.721 281.164 217.601  c
281.335 217.481 281.484 217.312 281.609 217.093  c
281.875 217.093 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
350.300 194.500 m
350.300 198.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 356.000 214.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -356.000 -214.000 ] concat
newpath
359.984 215.343 m
359.984 216.375 l
358.640 216.375 l
358.640 219.000 l
357.437 219.000 l
357.437 216.375 l
353.234 216.375 l
353.234 215.437 l
357.843 208.859 l
358.640 208.859 l
358.640 215.343 l
359.984 215.343 l
h
357.437 215.343 m
357.437 210.406 l
353.953 215.343 l
357.437 215.343 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
2.00000 194.500 m
2.00000 196.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 8.00000 205.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -8.00000 -205.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
79.4000 194.500 m
79.4000 196.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 85.0000 205.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -85.0000 -205.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
156.800 194.500 m
156.800 196.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 162.000 205.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -162.000 -205.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
234.200 194.500 m
234.200 196.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 240.000 205.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -240.000 -205.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
311.600 194.500 m
311.600 196.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 317.000 205.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -317.000 -205.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
389.000 194.500 m
389.000 196.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 395.000 205.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -395.000 -205.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
Q
2 J
0 j
q
0 J
1 j
newpath
195.500 388.000 m
195.500 1.00000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
147 89 20 17 rc
newpath
157.390 96.3750 m
157.557 96.6562 157.671 96.9192 157.734 97.1640  c
157.796 97.4088 157.864 97.8958 157.937 98.6250  c
158.250 102.218 l
158.541 101.875 158.968 101.317 159.531 100.546  c
159.791 100.182 160.119 99.6770 160.515 99.0312  c
160.755 98.6458 160.906 98.3750 160.968 98.2187  c
160.989 98.1354 161.000 98.0520 161.000 97.9687  c
161.000 97.9166 160.984 97.8750 160.953 97.8437  c
160.921 97.8125 160.833 97.7734 160.687 97.7265  c
160.541 97.6796 160.421 97.5937 160.328 97.4687  c
160.234 97.3437 160.187 97.1979 160.187 97.0312  c
160.187 96.8333 160.244 96.6744 160.359 96.5546  c
160.474 96.4349 160.619 96.3750 160.796 96.3750  c
161.015 96.3750 161.200 96.4635 161.351 96.6406  c
161.502 96.8177 161.578 97.0625 161.578 97.3750  c
161.578 97.7604 161.445 98.2005 161.179 98.6953  c
160.914 99.1901 160.406 99.9505 159.656 100.976  c
158.906 102.002 157.994 103.119 156.921 104.328  c
156.192 105.161 155.648 105.687 155.289 105.906  c
154.929 106.125 154.625 106.234 154.375 106.234  c
154.218 106.234 154.083 106.177 153.968 106.062  c
153.854 105.947 153.796 105.817 153.796 105.671  c
153.796 105.474 153.877 105.296 154.039 105.140  c
154.200 104.984 154.369 104.906 154.546 104.906  c
154.651 104.906 154.734 104.932 154.796 104.984  c
154.838 105.005 154.882 105.072 154.929 105.187  c
154.976 105.302 155.015 105.380 155.046 105.421  c
155.078 105.442 155.109 105.453 155.140 105.453  c
155.171 105.453 155.224 105.427 155.296 105.375  c
155.567 105.208 155.880 104.947 156.234 104.593  c
156.703 104.114 157.046 103.724 157.265 103.421  c
156.859 98.7812 l
156.796 98.0104 156.695 97.5416 156.554 97.3750  c
156.414 97.2083 156.182 97.1250 155.859 97.1250  c
155.755 97.1250 155.572 97.1406 155.312 97.1718  c
155.250 96.9062 l
157.390 96.3750 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
1.00000 w
2 J
0 j
newpath
195.500 349.300 m
191.500 349.300 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 186.000 354.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -186.000 -354.000 ] concat
q
177 347 8 16 rc
newpath
189.453 355.890 m
179.546 355.890 l
179.546 355.109 l
189.453 355.109 l
189.453 355.890 l
h
f
Q
newpath
193.984 356.343 m
193.984 357.375 l
192.640 357.375 l
192.640 360.000 l
191.437 360.000 l
191.437 357.375 l
187.234 357.375 l
187.234 356.437 l
191.843 349.859 l
192.640 349.859 l
192.640 356.343 l
193.984 356.343 l
h
191.437 356.343 m
191.437 351.406 l
187.953 356.343 l
191.437 356.343 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
195.500 271.900 m
191.500 271.900 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 186.000 277.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -186.000 -277.000 ] concat
q
177 269 8 16 rc
newpath
189.453 277.890 m
179.546 277.890 l
179.546 277.109 l
189.453 277.109 l
189.453 277.890 l
h
f
Q
newpath
193.875 280.093 m
193.187 282.000 l
187.328 282.000 l
187.328 281.734 l
189.046 280.161 190.257 278.875 190.960 277.875  c
191.664 276.875 192.015 275.963 192.015 275.140  c
192.015 274.515 191.822 274.000 191.437 273.593  c
191.052 273.187 190.588 272.984 190.046 272.984  c
189.567 272.984 189.132 273.127 188.742 273.414  c
188.351 273.700 188.062 274.119 187.875 274.671  c
187.609 274.671 l
187.734 273.765 188.049 273.070 188.554 272.585  c
189.059 272.101 189.687 271.859 190.437 271.859  c
191.250 271.859 191.924 272.119 192.460 272.640  c
192.997 273.161 193.265 273.770 193.265 274.468  c
193.265 274.968 193.151 275.474 192.921 275.984  c
192.557 276.776 191.968 277.609 191.156 278.484  c
189.947 279.817 189.187 280.619 188.875 280.890  c
191.468 280.890 l
192.000 280.890 192.372 280.872 192.585 280.835  c
192.799 280.799 192.992 280.721 193.164 280.601  c
193.335 280.481 193.484 280.312 193.609 280.093  c
193.875 280.093 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
195.500 194.500 m
191.500 194.500 l
S
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
195.500 117.100 m
191.500 117.100 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 191.000 122.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -191.000 -122.000 ] concat
newpath
193.875 126.093 m
193.187 128.000 l
187.328 128.000 l
187.328 127.734 l
189.046 126.161 190.257 124.875 190.960 123.875  c
191.664 122.875 192.015 121.963 192.015 121.140  c
192.015 120.515 191.822 120.000 191.437 119.593  c
191.052 119.187 190.588 118.984 190.046 118.984  c
189.567 118.984 189.132 119.127 188.742 119.414  c
188.351 119.700 188.062 120.119 187.875 120.671  c
187.609 120.671 l
187.734 119.765 188.049 119.070 188.554 118.585  c
189.059 118.101 189.687 117.859 190.437 117.859  c
191.250 117.859 191.924 118.119 192.460 118.640  c
192.997 119.161 193.265 119.770 193.265 120.468  c
193.265 120.968 193.151 121.474 192.921 121.984  c
192.557 122.776 191.968 123.609 191.156 124.484  c
189.947 125.817 189.187 126.619 188.875 126.890  c
191.468 126.890 l
192.000 126.890 192.372 126.872 192.585 126.835  c
192.799 126.799 192.992 126.721 193.164 126.601  c
193.335 126.481 193.484 126.312 193.609 126.093  c
193.875 126.093 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
195.500 39.7000 m
191.500 39.7000 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 191.000 45.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -191.000 -45.0000 ] concat
newpath
193.984 46.3437 m
193.984 47.3750 l
192.640 47.3750 l
192.640 50.0000 l
191.437 50.0000 l
191.437 47.3750 l
187.234 47.3750 l
187.234 46.4375 l
191.843 39.8593 l
192.640 39.8593 l
192.640 46.3437 l
193.984 46.3437 l
h
191.437 46.3437 m
191.437 41.4062 l
187.953 46.3437 l
191.437 46.3437 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
195.500 388.000 m
193.500 388.000 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 393.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -393.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
195.500 310.600 m
193.500 310.600 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 315.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -315.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
195.500 233.200 m
193.500 233.200 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 238.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -238.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
195.500 155.800 m
193.500 155.800 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 160.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -160.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
195.500 78.3999 m
193.500 78.3999 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 83.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -83.0000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
195.500 1.00000 m
193.500 1.00000 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 6.00000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -6.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
Q
2 J
0 j
Q
Q
cliprestore
1 0 400 400 rc
[ 1.00000 0 0 1.00000 1.00000 0 ] concat
[ 1.00000 0 0 1.00000 -1.00000 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
