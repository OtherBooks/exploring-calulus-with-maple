%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 255 575 536
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Wednesday, March 16, 2016 10:11:15 o'clock AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
412 208 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
412.000 0 l
412.000 208.000 l
0 208.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 402 198 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
[ 2.00000 5.00000 ] 0 d
10.5000 6.03183 385.985 184.468 rc
0.470588 0 0.0549020 RG
newpath
88.0971 71.5456 m
88.7012 73.2540 l
89.2268 74.7257 l
89.8179 76.3645 l
90.4129 77.9966 l
91.0051 79.6036 l
91.5541 81.0780 l
92.1226 82.5890 l
92.7106 84.1348 l
93.2966 85.6586 l
93.8994 87.2083 l
94.4304 88.5583 l
95.0282 90.0615 l
95.6284 91.5531 l
96.2067 92.9736 l
96.7320 94.2492 l
97.3566 95.7483 l
97.8857 97.0031 l
98.5011 98.4453 l
99.0459 99.7062 l
99.6436 101.072 l
100.212 102.357 l
100.806 103.681 l
101.352 104.881 l
101.940 106.159 l
102.551 107.468 l
103.083 108.593 l
103.657 109.792 l
104.251 111.013 l
104.831 112.191 l
105.393 113.315 l
106.017 114.545 l
106.577 115.634 l
107.176 116.779 l
107.718 117.801 l
108.311 118.902 l
108.868 119.922 l
109.451 120.972 l
110.021 121.982 l
110.618 123.022 l
111.193 124.008 l
111.781 124.998 l
112.364 125.964 l
112.899 126.836 l
113.513 127.819 l
114.062 128.682 l
114.648 129.585 l
115.208 130.434 l
115.830 131.359 l
116.369 132.144 l
116.981 133.017 l
117.538 133.798 l
118.147 134.633 l
118.673 135.340 l
119.273 136.127 l
119.851 136.871 l
120.429 137.598 l
121.006 138.306 l
121.559 138.971 l
122.157 139.672 l
122.728 140.324 l
123.328 140.993 l
123.871 141.583 l
124.472 142.218 l
125.047 142.810 l
125.621 143.383 l
126.220 143.965 l
126.772 144.486 l
127.337 145.003 l
127.961 145.556 l
128.526 146.039 l
129.104 146.518 l
129.692 146.988 l
130.232 147.404 l
130.808 147.832 l
131.379 148.241 l
131.991 148.660 l
132.530 149.015 l
133.153 149.406 l
133.714 149.743 l
134.270 150.061 l
134.868 150.385 l
135.468 150.693 l
136.014 150.958 l
136.593 151.223 l
137.159 151.466 l
137.772 151.711 l
138.303 151.908 l
138.913 152.118 l
139.486 152.298 l
140.053 152.460 l
140.621 152.606 l
141.200 152.739 l
141.814 152.862 l
142.377 152.958 l
142.933 153.037 l
143.527 153.105 l
144.120 153.156 l
144.652 153.186 l
145.282 153.204 l
145.809 153.204 l
146.426 153.187 l
147.015 153.152 l
147.540 153.107 l
148.131 153.040 l
148.726 152.955 l
149.319 152.853 l
149.868 152.743 l
150.436 152.614 l
151.024 152.463 l
151.610 152.296 l
152.213 152.106 l
152.744 151.923 l
153.342 151.702 l
153.942 151.461 l
154.520 151.213 l
155.046 150.972 l
155.670 150.669 l
156.199 150.397 l
156.815 150.063 l
157.359 149.752 l
157.957 149.394 l
158.526 149.036 l
159.120 148.646 l
159.666 148.272 l
160.254 147.852 l
160.865 147.398 l
161.397 146.988 l
161.971 146.529 l
162.565 146.038 l
163.145 145.541 l
163.707 145.044 l
164.331 144.473 l
164.891 143.945 l
165.489 143.363 l
166.032 142.820 l
166.625 142.211 l
167.182 141.621 l
167.765 140.988 l
168.335 140.354 l
168.932 139.672 l
169.507 138.998 l
170.095 138.293 l
170.678 137.576 l
171.213 136.903 l
171.827 136.114 l
172.376 135.392 l
172.962 134.606 l
173.522 133.838 l
174.144 132.967 l
174.683 132.197 l
175.294 131.306 l
175.852 130.478 l
176.461 129.555 l
176.987 128.743 l
177.586 127.802 l
178.165 126.876 l
178.743 125.934 l
179.320 124.980 l
179.873 124.047 l
180.471 123.022 l
181.042 122.028 l
181.642 120.965 l
182.185 119.987 l
182.786 118.889 l
183.361 117.821 l
183.934 116.739 l
184.534 115.592 l
185.086 114.519 l
185.651 113.405 l
186.275 112.157 l
186.840 111.010 l
187.418 109.821 l
188.006 108.594 l
188.546 107.452 l
189.122 106.218 l
189.693 104.978 l
190.305 103.633 l
190.844 102.431 l
191.466 101.026 l
192.028 99.7420 l
192.584 98.4559 l
193.182 97.0559 l
193.782 95.6325 l
194.328 94.3219 l
194.907 92.9139 l
195.473 91.5239 l
196.086 89.9991 l
196.617 88.6648 l
197.227 87.1150 l
197.800 85.6414 l
198.367 84.1661 l
198.935 82.6735 l
199.514 81.1348 l
200.128 79.4857 l
200.691 77.9572 l
201.247 76.4330 l
201.841 74.7868 l
202.434 73.1267 l
202.992 71.5456 l
S
cliprestore
newpath
0 0 m
0 198.000 l
402.000 198.000 l
402.000 0 l
h
W
Q
q
1.00000 w
2 J
0 j
0.470588 0 0.0549020 RG
[ 1.00000 0 0 1.00000 310.234 16.1140 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -310.234 -16.1140 ] concat
[ 1.00000 0 0 1.00000 311.198 7.10176 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -311.198 -7.10176 ] concat
[ 1.00000 0 0 1.00000 309.234 24.8060 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -309.234 -24.8060 ] concat
[ 1.00000 0 0 1.00000 307.353 39.4124 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -307.353 -39.4124 ] concat
[ 1.00000 0 0 1.00000 308.238 32.8174 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -308.238 -32.8174 ] concat
[ 1.00000 0 0 1.00000 305.371 52.4854 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -305.371 -52.4854 ] concat
[ 1.00000 0 0 1.00000 302.529 67.4534 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -302.529 -67.4534 ] concat
[ 1.00000 0 0 1.00000 303.444 63.0950 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -303.444 -63.0950 ] concat
[ 1.00000 0 0 1.00000 304.392 58.1283 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -304.392 -58.1283 ] concat
[ 1.00000 0 0 1.00000 301.542 71.6925 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -301.542 -71.6925 ] concat
[ 1.00000 0 0 1.00000 288.998 93.3065 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -288.998 -93.3065 ] concat
[ 1.00000 0 0 1.00000 290.022 93.2125 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -290.022 -93.2125 ] concat
[ 1.00000 0 0 1.00000 290.960 92.9411 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -290.960 -92.9411 ] concat
[ 1.00000 0 0 1.00000 291.886 92.4803 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -291.886 -92.4803 ] concat
[ 1.00000 0 0 1.00000 276.522 86.9400 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -276.522 -86.9400 ] concat
[ 1.00000 0 0 1.00000 277.448 87.3684 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -277.448 -87.3684 ] concat
[ 1.00000 0 0 1.00000 278.444 87.9153 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -278.444 -87.9153 ] concat
[ 1.00000 0 0 1.00000 279.444 88.5317 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -279.444 -88.5317 ] concat
[ 1.00000 0 0 1.00000 280.354 89.1316 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -280.354 -89.1316 ] concat
[ 1.00000 0 0 1.00000 281.320 89.7892 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -281.320 -89.7892 ] concat
[ 1.00000 0 0 1.00000 282.263 90.4316 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -282.263 -90.4316 ] concat
[ 1.00000 0 0 1.00000 283.285 91.1059 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -283.285 -91.1059 ] concat
[ 1.00000 0 0 1.00000 284.170 91.6522 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -284.170 -91.6522 ] concat
[ 1.00000 0 0 1.00000 285.186 92.2152 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -285.186 -92.2152 ] concat
[ 1.00000 0 0 1.00000 286.141 92.6609 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -286.141 -92.6609 ] concat
[ 1.00000 0 0 1.00000 287.087 93.0021 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -287.087 -93.0021 ] concat
[ 1.00000 0 0 1.00000 288.033 93.2239 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -288.033 -93.2239 ] concat
[ 1.00000 0 0 1.00000 292.876 91.7547 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -292.876 -91.7547 ] concat
[ 1.00000 0 0 1.00000 293.864 90.7686 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -293.864 -90.7686 ] concat
[ 1.00000 0 0 1.00000 294.751 89.6421 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -294.751 -89.6421 ] concat
[ 1.00000 0 0 1.00000 295.801 87.9893 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -295.801 -87.9893 ] concat
[ 1.00000 0 0 1.00000 270.718 87.1852 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -270.718 -87.1852 ] concat
[ 1.00000 0 0 1.00000 266.933 91.5463 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -266.933 -91.5463 ] concat
[ 1.00000 0 0 1.00000 267.875 90.0614 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -267.875 -90.0614 ] concat
[ 1.00000 0 0 1.00000 268.838 88.8301 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -268.838 -88.8301 ] concat
[ 1.00000 0 0 1.00000 269.818 87.8545 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -269.818 -87.8545 ] concat
[ 1.00000 0 0 1.00000 271.678 86.6920 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -271.678 -86.6920 ] concat
[ 1.00000 0 0 1.00000 272.630 86.4074 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -272.630 -86.4074 ] concat
[ 1.00000 0 0 1.00000 273.649 86.3059 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -273.649 -86.3059 ] concat
[ 1.00000 0 0 1.00000 274.548 86.3715 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -274.548 -86.3715 ] concat
[ 1.00000 0 0 1.00000 275.586 86.6049 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -275.586 -86.6049 ] concat
[ 1.00000 0 0 1.00000 296.680 86.3223 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -296.680 -86.3223 ] concat
[ 1.00000 0 0 1.00000 297.708 84.0220 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -297.708 -84.0220 ] concat
[ 1.00000 0 0 1.00000 298.689 81.4517 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -298.689 -81.4517 ] concat
[ 1.00000 0 0 1.00000 299.565 78.8293 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -299.565 -78.8293 ] concat
[ 1.00000 0 0 1.00000 300.550 75.4909 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -300.550 -75.4909 ] concat
[ 1.00000 0 0 1.00000 306.348 46.3266 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -306.348 -46.3266 ] concat
[ 1.00000 0 0 1.00000 262.076 104.352 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -262.076 -104.352 ] concat
[ 1.00000 0 0 1.00000 263.032 101.079 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -263.032 -101.079 ] concat
[ 1.00000 0 0 1.00000 259.211 116.692 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -259.211 -116.692 ] concat
[ 1.00000 0 0 1.00000 260.117 112.361 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -260.117 -112.361 ] concat
[ 1.00000 0 0 1.00000 261.117 108.045 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -261.117 -108.045 ] concat
[ 1.00000 0 0 1.00000 257.260 127.479 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -257.260 -127.479 ] concat
[ 1.00000 0 0 1.00000 255.341 140.175 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -255.341 -140.175 ] concat
[ 1.00000 0 0 1.00000 256.263 133.806 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -256.263 -133.806 ] concat
[ 1.00000 0 0 1.00000 258.211 121.968 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -258.211 -121.968 ] concat
[ 1.00000 0 0 1.00000 253.417 155.136 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -253.417 -155.136 ] concat
[ 1.00000 0 0 1.00000 252.452 163.530 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -252.452 -163.530 ] concat
[ 1.00000 0 0 1.00000 251.454 172.878 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -251.454 -172.878 ] concat
[ 1.00000 0 0 1.00000 250.577 181.657 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -250.577 -181.657 ] concat
[ 1.00000 0 0 1.00000 254.380 147.352 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -254.380 -147.352 ] concat
[ 1.00000 0 0 1.00000 264.031 98.0766 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -264.031 -98.0766 ] concat
[ 1.00000 0 0 1.00000 264.951 95.6666 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -264.951 -95.6666 ] concat
[ 1.00000 0 0 1.00000 265.893 93.5327 ] concat
newpath
0 2.00000 m
2.00000 0 l
4.00000 2.00000 l
2.00000 4.00000 l
h
S
[ 1.00000 0 0 1.00000 -265.893 -93.5327 ] concat
Q
q
0.470588 0 0.0549020 RG
10.5000 6.03183 385.985 184.468 rc
newpath
67.2816 190.289 m
394.485 35.2520 l
S
cliprestore
newpath
0 0 m
0 198.000 l
402.000 198.000 l
402.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
11.5000 98.7659 m
394.485 98.7659 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
292 118 13 15 rc
newpath
298.250 124.250 m
298.458 124.468 298.614 124.692 298.718 124.921  c
298.802 125.067 298.927 125.463 299.093 126.109  c
299.656 125.281 l
299.802 125.072 299.981 124.877 300.195 124.695  c
300.408 124.513 300.593 124.385 300.750 124.312  c
300.854 124.270 300.968 124.250 301.093 124.250  c
301.270 124.250 301.414 124.299 301.523 124.398  c
301.632 124.497 301.687 124.614 301.687 124.750  c
301.687 124.916 301.656 125.031 301.593 125.093  c
301.479 125.197 301.343 125.250 301.187 125.250  c
301.093 125.250 301.000 125.229 300.906 125.187  c
300.708 125.125 300.572 125.093 300.500 125.093  c
300.395 125.093 300.276 125.151 300.140 125.265  c
299.880 125.484 299.567 125.911 299.203 126.546  c
299.718 128.718 l
299.802 129.052 299.869 129.252 299.921 129.320  c
299.974 129.388 300.031 129.421 300.093 129.421  c
300.177 129.421 300.281 129.375 300.406 129.281  c
300.635 129.083 300.833 128.828 301.000 128.515  c
301.218 128.625 l
300.947 129.125 300.609 129.541 300.203 129.875  c
299.974 130.062 299.776 130.156 299.609 130.156  c
299.369 130.156 299.182 130.020 299.046 129.750  c
298.953 129.583 298.770 128.875 298.500 127.625  c
297.833 128.770 297.302 129.505 296.906 129.828  c
296.645 130.046 296.395 130.156 296.156 130.156  c
295.989 130.156 295.833 130.093 295.687 129.968  c
295.593 129.875 295.546 129.750 295.546 129.593  c
295.546 129.458 295.593 129.343 295.687 129.250  c
295.781 129.156 295.895 129.109 296.031 129.109  c
296.166 129.109 296.307 129.177 296.453 129.312  c
296.567 129.406 296.656 129.453 296.718 129.453  c
296.760 129.453 296.822 129.421 296.906 129.359  c
297.104 129.192 297.375 128.843 297.718 128.312  c
298.062 127.781 298.286 127.395 298.390 127.156  c
298.130 126.125 297.989 125.583 297.968 125.531  c
297.875 125.250 297.750 125.052 297.593 124.937  c
297.437 124.822 297.203 124.765 296.890 124.765  c
296.796 124.765 296.687 124.770 296.562 124.781  c
296.562 124.546 l
298.250 124.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 198.000 l
402.000 198.000 l
402.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
11.5000 98.7659 m
11.5000 101.865 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 108 6 13 rc
newpath
16.7968 115.437 m
8.20312 115.437 l
8.20312 114.765 l
16.7968 114.765 l
16.7968 115.437 l
h
f
Q
newpath
15.5312 111.234 m
17.6250 110.218 l
17.8281 110.218 l
17.8281 117.484 l
17.8281 117.963 17.8489 118.263 17.8906 118.382  c
17.9322 118.502 18.0156 118.593 18.1406 118.656  c
18.2656 118.718 18.5208 118.755 18.9062 118.765  c
18.9062 119.000 l
15.6718 119.000 l
15.6718 118.765 l
16.0781 118.755 16.3411 118.718 16.4609 118.656  c
16.5807 118.593 16.6640 118.510 16.7109 118.406  c
16.7578 118.302 16.7812 117.994 16.7812 117.484  c
16.7812 112.843 l
16.7812 112.208 16.7604 111.802 16.7187 111.625  c
16.6875 111.489 16.6328 111.390 16.5546 111.328  c
16.4765 111.265 16.3802 111.234 16.2656 111.234  c
16.1093 111.234 15.8958 111.302 15.6250 111.437  c
15.5312 111.234 l
h
20.9687 114.750 m
20.9687 113.770 21.1171 112.924 21.4140 112.210  c
21.7109 111.497 22.1041 110.968 22.5937 110.625  c
22.9791 110.354 23.3750 110.218 23.7812 110.218  c
24.4375 110.218 25.0260 110.552 25.5468 111.218  c
26.2031 112.052 26.5312 113.182 26.5312 114.609  c
26.5312 115.609 26.3880 116.458 26.1015 117.156  c
25.8151 117.854 25.4479 118.362 25.0000 118.679  c
24.5520 118.997 24.1250 119.156 23.7187 119.156  c
22.8958 119.156 22.2083 118.671 21.6562 117.703  c
21.1979 116.880 20.9687 115.895 20.9687 114.750  c
h
22.2187 114.906 m
22.2187 116.093 22.3645 117.062 22.6562 117.812  c
22.8958 118.437 23.2552 118.750 23.7343 118.750  c
23.9635 118.750 24.2005 118.648 24.4453 118.445  c
24.6901 118.242 24.8750 117.895 25.0000 117.406  c
25.1979 116.687 25.2968 115.661 25.2968 114.328  c
25.2968 113.349 25.1927 112.531 24.9843 111.875  c
24.8385 111.385 24.6406 111.041 24.3906 110.843  c
24.2239 110.708 24.0156 110.640 23.7656 110.640  c
23.4843 110.640 23.2291 110.765 23.0000 111.015  c
22.6979 111.369 22.4921 111.924 22.3828 112.679  c
22.2734 113.434 22.2187 114.177 22.2187 114.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
107.246 98.7659 m
107.246 101.865 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
105 108 6 13 rc
newpath
115.796 115.437 m
107.203 115.437 l
107.203 114.765 l
115.796 114.765 l
115.796 115.437 l
h
f
Q
newpath
118.640 110.390 m
118.140 111.468 l
115.562 111.468 l
115.000 112.625 l
116.114 112.791 117.000 113.208 117.656 113.875  c
118.218 114.447 118.500 115.125 118.500 115.906  c
118.500 116.364 118.408 116.786 118.226 117.171  c
118.044 117.557 117.812 117.885 117.531 118.156  c
117.250 118.427 116.937 118.640 116.593 118.796  c
116.114 119.036 115.614 119.156 115.093 119.156  c
114.583 119.156 114.210 119.067 113.976 118.890  c
113.742 118.713 113.625 118.520 113.625 118.312  c
113.625 118.187 113.674 118.080 113.773 117.992  c
113.872 117.903 113.994 117.859 114.140 117.859  c
114.244 117.859 114.338 117.875 114.421 117.906  c
114.505 117.937 114.645 118.026 114.843 118.171  c
115.166 118.390 115.489 118.500 115.812 118.500  c
116.312 118.500 116.747 118.312 117.117 117.937  c
117.487 117.562 117.671 117.104 117.671 116.562  c
117.671 116.041 117.505 115.557 117.171 115.109  c
116.838 114.661 116.380 114.312 115.796 114.062  c
115.328 113.875 114.697 113.765 113.906 113.734  c
115.562 110.390 l
118.640 110.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
202.992 98.7659 m
202.992 101.865 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
200.468 113.750 m
200.468 112.770 200.617 111.924 200.914 111.210  c
201.210 110.497 201.604 109.968 202.093 109.625  c
202.479 109.354 202.875 109.218 203.281 109.218  c
203.937 109.218 204.526 109.552 205.046 110.218  c
205.703 111.052 206.031 112.182 206.031 113.609  c
206.031 114.609 205.888 115.458 205.601 116.156  c
205.315 116.854 204.947 117.362 204.500 117.679  c
204.052 117.997 203.625 118.156 203.218 118.156  c
202.395 118.156 201.708 117.671 201.156 116.703  c
200.697 115.880 200.468 114.895 200.468 113.750  c
h
201.718 113.906 m
201.718 115.093 201.864 116.062 202.156 116.812  c
202.395 117.437 202.755 117.750 203.234 117.750  c
203.463 117.750 203.700 117.648 203.945 117.445  c
204.190 117.242 204.375 116.895 204.500 116.406  c
204.697 115.687 204.796 114.661 204.796 113.328  c
204.796 112.349 204.692 111.531 204.484 110.875  c
204.338 110.385 204.140 110.041 203.890 109.843  c
203.724 109.708 203.515 109.640 203.265 109.640  c
202.984 109.640 202.729 109.765 202.500 110.015  c
202.197 110.369 201.992 110.924 201.882 111.679  c
201.773 112.434 201.718 113.177 201.718 113.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
298.739 98.7659 m
298.739 101.865 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
305.640 110.390 m
305.140 111.468 l
302.562 111.468 l
302.000 112.625 l
303.114 112.791 304.000 113.208 304.656 113.875  c
305.218 114.447 305.500 115.125 305.500 115.906  c
305.500 116.364 305.408 116.786 305.226 117.171  c
305.044 117.557 304.812 117.885 304.531 118.156  c
304.250 118.427 303.937 118.640 303.593 118.796  c
303.114 119.036 302.614 119.156 302.093 119.156  c
301.583 119.156 301.210 119.067 300.976 118.890  c
300.742 118.713 300.625 118.520 300.625 118.312  c
300.625 118.187 300.674 118.080 300.773 117.992  c
300.872 117.903 300.994 117.859 301.140 117.859  c
301.244 117.859 301.338 117.875 301.421 117.906  c
301.505 117.937 301.645 118.026 301.843 118.171  c
302.166 118.390 302.489 118.500 302.812 118.500  c
303.312 118.500 303.747 118.312 304.117 117.937  c
304.487 117.562 304.671 117.104 304.671 116.562  c
304.671 116.041 304.505 115.557 304.171 115.109  c
303.838 114.661 303.380 114.312 302.796 114.062  c
302.328 113.875 301.697 113.765 300.906 113.734  c
302.562 110.390 l
305.640 110.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
394.485 98.7659 m
394.485 101.865 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
394.531 111.234 m
396.625 110.218 l
396.828 110.218 l
396.828 117.484 l
396.828 117.963 396.849 118.263 396.890 118.382  c
396.932 118.502 397.015 118.593 397.140 118.656  c
397.265 118.718 397.520 118.755 397.906 118.765  c
397.906 119.000 l
394.671 119.000 l
394.671 118.765 l
395.078 118.755 395.341 118.718 395.460 118.656  c
395.580 118.593 395.664 118.510 395.710 118.406  c
395.757 118.302 395.781 117.994 395.781 117.484  c
395.781 112.843 l
395.781 112.208 395.760 111.802 395.718 111.625  c
395.687 111.489 395.632 111.390 395.554 111.328  c
395.476 111.265 395.380 111.234 395.265 111.234  c
395.109 111.234 394.895 111.302 394.625 111.437  c
394.531 111.234 l
h
399.968 114.750 m
399.968 113.770 400.117 112.924 400.414 112.210  c
400.710 111.497 401.104 110.968 401.593 110.625  c
401.979 110.354 402.375 110.218 402.781 110.218  c
403.437 110.218 404.026 110.552 404.546 111.218  c
405.203 112.052 405.531 113.182 405.531 114.609  c
405.531 115.609 405.388 116.458 405.101 117.156  c
404.815 117.854 404.447 118.362 404.000 118.679  c
403.552 118.997 403.125 119.156 402.718 119.156  c
401.895 119.156 401.208 118.671 400.656 117.703  c
400.197 116.880 399.968 115.895 399.968 114.750  c
h
401.218 114.906 m
401.218 116.093 401.364 117.062 401.656 117.812  c
401.895 118.437 402.255 118.750 402.734 118.750  c
402.963 118.750 403.200 118.648 403.445 118.445  c
403.690 118.242 403.875 117.895 404.000 117.406  c
404.197 116.687 404.296 115.661 404.296 114.328  c
404.296 113.349 404.192 112.531 403.984 111.875  c
403.838 111.385 403.640 111.041 403.390 110.843  c
403.224 110.708 403.015 110.640 402.765 110.640  c
402.484 110.640 402.229 110.765 402.000 111.015  c
401.697 111.369 401.492 111.924 401.382 112.679  c
401.273 113.434 401.218 114.177 401.218 114.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
30.6492 98.7659 m
30.6492 100.315 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
49.7985 98.7659 m
49.7985 100.315 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
68.9478 98.7659 m
68.9478 100.315 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
88.0971 98.7659 m
88.0971 100.315 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
126.395 98.7659 m
126.395 100.315 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
145.545 98.7659 m
145.545 100.315 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
164.694 98.7659 m
164.694 100.315 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
183.843 98.7659 m
183.843 100.315 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
222.142 98.7659 m
222.142 100.315 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
241.291 98.7659 m
241.291 100.315 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
260.440 98.7659 m
260.440 100.315 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
279.590 98.7659 m
279.590 100.315 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
317.888 98.7659 m
317.888 100.315 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
337.038 98.7659 m
337.038 100.315 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
356.187 98.7659 m
356.187 100.315 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
375.336 98.7659 m
375.336 100.315 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
202.992 189.500 m
202.992 8.03183 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
161 46 13 15 rc
newpath
167.078 52.2500 m
167.224 52.5000 167.322 52.7317 167.375 52.9453  c
167.427 53.1588 167.484 53.5781 167.546 54.2031  c
167.812 57.3281 l
168.072 57.0260 168.442 56.5416 168.921 55.8750  c
169.151 55.5520 169.437 55.1145 169.781 54.5625  c
169.989 54.2291 170.119 53.9947 170.171 53.8593  c
170.192 53.7864 170.203 53.7135 170.203 53.6406  c
170.203 53.5989 170.187 53.5625 170.156 53.5312  c
170.125 53.5000 170.046 53.4635 169.921 53.4218  c
169.796 53.3802 169.695 53.3072 169.617 53.2031  c
169.539 53.0989 169.500 52.9739 169.500 52.8281  c
169.500 52.6614 169.549 52.5234 169.648 52.4140  c
169.747 52.3046 169.875 52.2500 170.031 52.2500  c
170.218 52.2500 170.377 52.3281 170.507 52.4843  c
170.638 52.6406 170.703 52.8541 170.703 53.1250  c
170.703 53.4583 170.588 53.8411 170.359 54.2734  c
170.130 54.7057 169.690 55.3645 169.039 56.2500  c
168.388 57.1354 167.599 58.1041 166.671 59.1562  c
166.036 59.8750 165.562 60.3307 165.250 60.5234  c
164.937 60.7161 164.671 60.8125 164.453 60.8125  c
164.317 60.8125 164.200 60.7604 164.101 60.6562  c
164.002 60.5520 163.953 60.4375 163.953 60.3125  c
163.953 60.1458 164.023 59.9947 164.164 59.8593  c
164.304 59.7239 164.453 59.6562 164.609 59.6562  c
164.692 59.6562 164.765 59.6770 164.828 59.7187  c
164.859 59.7395 164.895 59.7994 164.937 59.8984  c
164.979 59.9974 165.015 60.0625 165.046 60.0937  c
165.067 60.1145 165.093 60.1250 165.125 60.1250  c
165.145 60.1250 165.187 60.1041 165.250 60.0625  c
165.489 59.9166 165.760 59.6875 166.062 59.3750  c
166.468 58.9583 166.770 58.6197 166.968 58.3593  c
166.609 54.3437 l
166.557 53.6770 166.471 53.2708 166.351 53.1250  c
166.231 52.9791 166.031 52.9062 165.750 52.9062  c
165.656 52.9062 165.494 52.9218 165.265 52.9531  c
165.218 52.7187 l
167.078 52.2500 l
h
f
Q
cliprestore
newpath
0 0 m
0 198.000 l
402.000 198.000 l
402.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
202.992 189.500 m
199.892 189.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
181 188 6 13 rc
newpath
191.796 195.437 m
183.203 195.437 l
183.203 194.765 l
191.796 194.765 l
191.796 195.437 l
h
f
Q
newpath
190.531 191.234 m
192.625 190.218 l
192.828 190.218 l
192.828 197.484 l
192.828 197.963 192.849 198.263 192.890 198.382  c
192.932 198.502 193.015 198.593 193.140 198.656  c
193.265 198.718 193.520 198.755 193.906 198.765  c
193.906 199.000 l
190.671 199.000 l
190.671 198.765 l
191.078 198.755 191.341 198.718 191.460 198.656  c
191.580 198.593 191.664 198.510 191.710 198.406  c
191.757 198.302 191.781 197.994 191.781 197.484  c
191.781 192.843 l
191.781 192.208 191.760 191.802 191.718 191.625  c
191.687 191.489 191.632 191.390 191.554 191.328  c
191.476 191.265 191.380 191.234 191.265 191.234  c
191.109 191.234 190.895 191.302 190.625 191.437  c
190.531 191.234 l
h
195.968 194.750 m
195.968 193.770 196.117 192.924 196.414 192.210  c
196.710 191.497 197.104 190.968 197.593 190.625  c
197.979 190.354 198.375 190.218 198.781 190.218  c
199.437 190.218 200.026 190.552 200.546 191.218  c
201.203 192.052 201.531 193.182 201.531 194.609  c
201.531 195.609 201.388 196.458 201.101 197.156  c
200.815 197.854 200.447 198.362 200.000 198.679  c
199.552 198.997 199.125 199.156 198.718 199.156  c
197.895 199.156 197.208 198.671 196.656 197.703  c
196.197 196.880 195.968 195.895 195.968 194.750  c
h
197.218 194.906 m
197.218 196.093 197.364 197.062 197.656 197.812  c
197.895 198.437 198.255 198.750 198.734 198.750  c
198.963 198.750 199.200 198.648 199.445 198.445  c
199.690 198.242 199.875 197.895 200.000 197.406  c
200.197 196.687 200.296 195.661 200.296 194.328  c
200.296 193.349 200.192 192.531 199.984 191.875  c
199.838 191.385 199.640 191.041 199.390 190.843  c
199.224 190.708 199.015 190.640 198.765 190.640  c
198.484 190.640 198.229 190.765 198.000 191.015  c
197.697 191.369 197.492 191.924 197.382 192.679  c
197.273 193.434 197.218 194.177 197.218 194.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
202.992 144.133 m
199.892 144.133 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
188 143 6 13 rc
newpath
198.796 150.437 m
190.203 150.437 l
190.203 149.765 l
198.796 149.765 l
198.796 150.437 l
h
f
Q
newpath
201.640 145.390 m
201.140 146.468 l
198.562 146.468 l
198.000 147.625 l
199.114 147.791 200.000 148.208 200.656 148.875  c
201.218 149.447 201.500 150.125 201.500 150.906  c
201.500 151.364 201.408 151.786 201.226 152.171  c
201.044 152.557 200.812 152.885 200.531 153.156  c
200.250 153.427 199.937 153.640 199.593 153.796  c
199.114 154.036 198.614 154.156 198.093 154.156  c
197.583 154.156 197.210 154.067 196.976 153.890  c
196.742 153.713 196.625 153.520 196.625 153.312  c
196.625 153.187 196.674 153.080 196.773 152.992  c
196.872 152.903 196.994 152.859 197.140 152.859  c
197.244 152.859 197.338 152.875 197.421 152.906  c
197.505 152.937 197.645 153.026 197.843 153.171  c
198.166 153.390 198.489 153.500 198.812 153.500  c
199.312 153.500 199.747 153.312 200.117 152.937  c
200.487 152.562 200.671 152.104 200.671 151.562  c
200.671 151.041 200.505 150.557 200.171 150.109  c
199.838 149.661 199.380 149.312 198.796 149.062  c
198.328 148.875 197.697 148.765 196.906 148.734  c
198.562 145.390 l
201.640 145.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
202.992 98.7659 m
199.892 98.7659 l
S
Q
q
0 w
newpath
202.992 53.3988 m
199.892 53.3988 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
201.640 54.3906 m
201.140 55.4687 l
198.562 55.4687 l
198.000 56.6250 l
199.114 56.7916 200.000 57.2083 200.656 57.8750  c
201.218 58.4479 201.500 59.1250 201.500 59.9062  c
201.500 60.3645 201.408 60.7864 201.226 61.1718  c
201.044 61.5572 200.812 61.8854 200.531 62.1562  c
200.250 62.4270 199.937 62.6406 199.593 62.7968  c
199.114 63.0364 198.614 63.1562 198.093 63.1562  c
197.583 63.1562 197.210 63.0677 196.976 62.8906  c
196.742 62.7135 196.625 62.5208 196.625 62.3125  c
196.625 62.1875 196.674 62.0807 196.773 61.9921  c
196.872 61.9036 196.994 61.8593 197.140 61.8593  c
197.244 61.8593 197.338 61.8750 197.421 61.9062  c
197.505 61.9375 197.645 62.0260 197.843 62.1718  c
198.166 62.3906 198.489 62.5000 198.812 62.5000  c
199.312 62.5000 199.747 62.3125 200.117 61.9375  c
200.487 61.5625 200.671 61.1041 200.671 60.5625  c
200.671 60.0416 200.505 59.5572 200.171 59.1093  c
199.838 58.6614 199.380 58.3125 198.796 58.0625  c
198.328 57.8750 197.697 57.7656 196.906 57.7343  c
198.562 54.3906 l
201.640 54.3906 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
202.992 8.03183 m
199.892 8.03183 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
190.531 10.2343 m
192.625 9.21875 l
192.828 9.21875 l
192.828 16.4843 l
192.828 16.9635 192.849 17.2630 192.890 17.3828  c
192.932 17.5026 193.015 17.5937 193.140 17.6562  c
193.265 17.7187 193.520 17.7552 193.906 17.7656  c
193.906 18.0000 l
190.671 18.0000 l
190.671 17.7656 l
191.078 17.7552 191.341 17.7187 191.460 17.6562  c
191.580 17.5937 191.664 17.5104 191.710 17.4062  c
191.757 17.3020 191.781 16.9947 191.781 16.4843  c
191.781 11.8437 l
191.781 11.2083 191.760 10.8020 191.718 10.6250  c
191.687 10.4895 191.632 10.3906 191.554 10.3281  c
191.476 10.2656 191.380 10.2343 191.265 10.2343  c
191.109 10.2343 190.895 10.3020 190.625 10.4375  c
190.531 10.2343 l
h
195.968 13.7500 m
195.968 12.7708 196.117 11.9244 196.414 11.2109  c
196.710 10.4974 197.104 9.96875 197.593 9.62500  c
197.979 9.35416 198.375 9.21875 198.781 9.21875  c
199.437 9.21875 200.026 9.55208 200.546 10.2187  c
201.203 11.0520 201.531 12.1822 201.531 13.6093  c
201.531 14.6093 201.388 15.4583 201.101 16.1562  c
200.815 16.8541 200.447 17.3619 200.000 17.6796  c
199.552 17.9974 199.125 18.1562 198.718 18.1562  c
197.895 18.1562 197.208 17.6718 196.656 16.7031  c
196.197 15.8802 195.968 14.8958 195.968 13.7500  c
h
197.218 13.9062 m
197.218 15.0937 197.364 16.0625 197.656 16.8125  c
197.895 17.4375 198.255 17.7500 198.734 17.7500  c
198.963 17.7500 199.200 17.6484 199.445 17.4453  c
199.690 17.2421 199.875 16.8958 200.000 16.4062  c
200.197 15.6875 200.296 14.6614 200.296 13.3281  c
200.296 12.3489 200.192 11.5312 199.984 10.8750  c
199.838 10.3854 199.640 10.0416 199.390 9.84375  c
199.224 9.70833 199.015 9.64062 198.765 9.64062  c
198.484 9.64062 198.229 9.76562 198.000 10.0156  c
197.697 10.3697 197.492 10.9244 197.382 11.6796  c
197.273 12.4349 197.218 13.1770 197.218 13.9062  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
202.992 180.426 m
201.442 180.426 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
202.992 171.353 m
201.442 171.353 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
202.992 162.279 m
201.442 162.279 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
202.992 153.206 m
201.442 153.206 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
202.992 135.059 m
201.442 135.059 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
202.992 125.986 m
201.442 125.986 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
202.992 116.912 m
201.442 116.912 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
202.992 107.839 m
201.442 107.839 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
202.992 89.6925 m
201.442 89.6925 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
202.992 80.6190 m
201.442 80.6190 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
202.992 71.5456 m
201.442 71.5456 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
202.992 62.4722 m
201.442 62.4722 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
202.992 44.3254 m
201.442 44.3254 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
202.992 35.2520 m
201.442 35.2520 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
202.992 26.1786 m
201.442 26.1786 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
202.992 17.1052 m
201.442 17.1052 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 412 208 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
