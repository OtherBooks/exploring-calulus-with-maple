%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Monday, June 10, 2019 2:20:41 o'clock PM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
47.0000 -1.00000 340.493 390.000 rc
0.470588 0 0.0549020 RG
newpath
48.0554 307.424 m
48.1109 307.905 l
48.1663 308.348 l
48.2218 308.767 l
48.3327 309.552 l
48.4436 310.288 l
48.6654 311.659 l
48.8872 312.930 l
49.3308 315.268 l
49.7744 317.409 l
50.5463 320.804 l
51.3183 323.888 l
53.0545 330.026 l
54.8023 335.401 l
56.5418 340.160 l
58.1545 344.155 l
59.8244 347.937 l
61.5514 351.524 l
63.2729 354.812 l
65.0436 357.929 l
66.6033 360.474 l
68.3591 363.135 l
70.1221 365.608 l
71.8211 367.817 l
73.3639 369.685 l
75.1985 371.747 l
76.7526 373.367 l
78.5605 375.113 l
80.1607 376.542 l
81.9164 377.990 l
83.5883 379.258 l
85.3327 380.472 l
86.9346 381.493 l
88.6625 382.497 l
90.4573 383.439 l
92.0197 384.178 l
93.7070 384.895 l
95.4503 385.549 l
97.1557 386.109 l
98.8058 386.577 l
100.638 387.014 l
102.284 387.336 l
104.042 387.607 l
105.634 387.791 l
107.376 387.926 l
109.014 387.992 l
110.727 388.000 l
112.401 387.948 l
114.154 387.833 l
115.842 387.664 l
117.569 387.435 l
119.281 387.153 l
120.855 386.846 l
122.658 386.440 l
124.271 386.028 l
125.990 385.540 l
127.636 385.027 l
129.464 384.404 l
131.046 383.822 l
132.843 383.113 l
134.480 382.424 l
136.270 381.624 l
137.815 380.895 l
139.575 380.023 l
141.275 379.139 l
142.973 378.215 l
144.666 377.254 l
146.292 376.295 l
148.049 375.219 l
149.724 374.155 l
151.487 372.997 l
153.083 371.915 l
154.847 370.682 l
156.536 369.465 l
158.221 368.217 l
159.982 366.878 l
161.603 365.612 l
163.263 364.284 l
165.097 362.782 l
166.757 361.390 l
168.454 359.934 l
170.180 358.422 l
171.767 357.004 l
173.459 355.463 l
175.138 353.904 l
176.933 352.204 l
178.518 350.678 l
180.346 348.885 l
181.996 347.238 l
183.628 345.583 l
185.384 343.775 l
187.146 341.930 l
188.750 340.225 l
190.453 338.389 l
192.115 336.572 l
193.917 334.573 l
195.475 332.821 l
197.266 330.781 l
198.949 328.838 l
200.616 326.890 l
202.284 324.916 l
203.985 322.879 l
205.789 320.693 l
207.442 318.665 l
209.075 316.641 l
210.820 314.453 l
212.561 312.246 l
214.124 310.245 l
215.975 307.849 l
217.524 305.824 l
219.335 303.432 l
221.065 301.125 l
222.609 299.047 l
224.345 296.688 l
226.093 294.291 l
227.832 291.883 l
229.445 289.631 l
231.115 287.280 l
232.842 284.827 l
234.563 282.360 l
236.334 279.802 l
237.894 277.531 l
239.649 274.953 l
241.412 272.345 l
243.111 269.811 l
244.654 267.493 l
246.489 264.716 l
248.043 262.346 l
249.851 259.570 l
251.451 257.095 l
253.207 254.360 l
254.879 251.738 l
256.623 248.983 l
258.225 246.436 l
259.953 243.672 l
261.748 240.780 l
263.310 238.247 l
264.997 235.495 l
266.741 232.634 l
268.446 229.817 l
270.096 227.075 l
271.928 224.011 l
273.574 221.242 l
275.332 218.268 l
276.925 215.558 l
278.666 212.578 l
280.305 209.759 l
282.017 206.796 l
283.692 203.883 l
285.445 200.817 l
287.133 197.848 l
288.860 194.796 l
290.572 191.753 l
292.145 188.943 l
293.948 185.706 l
295.561 182.796 l
297.281 179.678 l
298.927 176.679 l
300.754 173.333 l
302.337 170.422 l
304.133 167.102 l
305.770 164.062 l
307.561 160.720 l
309.106 157.825 l
310.866 154.512 l
312.565 151.298 l
314.264 148.071 l
315.956 144.842 l
317.582 141.727 l
319.340 138.346 l
321.015 135.109 l
322.778 131.687 l
324.374 128.578 l
326.137 125.127 l
327.827 121.808 l
329.512 118.483 l
331.272 114.997 l
332.894 111.773 l
334.554 108.459 l
336.387 104.785 l
338.047 101.446 l
339.745 98.0186 l
341.471 94.5192 l
343.058 91.2909 l
344.750 87.8373 l
346.428 84.3975 l
348.224 80.7044 l
349.808 77.4337 l
351.637 73.6465 l
353.287 70.2164 l
354.919 66.8111 l
356.675 63.1367 l
358.437 59.4342 l
360.041 56.0542 l
361.744 52.4529 l
363.406 48.9267 l
365.207 45.0914 l
366.766 41.7620 l
368.557 37.9258 l
370.240 34.3076 l
371.906 30.7131 l
373.575 27.1044 l
375.276 23.4123 l
377.079 19.4861 l
378.733 15.8748 l
380.365 12.2994 l
382.110 8.46579 l
383.851 4.62863 l
385.493 1.00000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
47.0000 -1.00000 340.493 390.000 rc
0 0.0549020 0.470588 RG
newpath
48.0000 306.843 m
49.7744 304.523 l
51.3183 302.505 l
53.0545 300.235 l
54.8023 297.952 l
56.5418 295.680 l
58.1545 293.575 l
59.8244 291.396 l
61.5514 289.145 l
63.2729 286.902 l
65.0436 284.598 l
66.6033 282.570 l
68.3591 280.290 l
70.1221 278.003 l
71.8211 275.802 l
73.3639 273.807 l
75.1985 271.437 l
76.7526 269.433 l
78.5605 267.106 l
80.1607 265.050 l
81.9164 262.798 l
83.5883 260.659 l
85.3327 258.431 l
86.9346 256.390 l
88.6625 254.194 l
90.4573 251.918 l
92.0197 249.942 l
93.7070 247.813 l
95.4503 245.621 l
97.1557 243.482 l
98.8058 241.418 l
100.638 239.135 l
102.284 237.089 l
104.042 234.913 l
105.634 232.948 l
107.376 230.807 l
109.014 228.799 l
110.727 226.709 l
112.401 224.673 l
114.154 222.551 l
115.842 220.515 l
117.569 218.443 l
119.281 216.396 l
120.855 214.524 l
122.658 212.388 l
124.271 210.487 l
125.990 208.469 l
127.636 206.548 l
129.464 204.426 l
131.046 202.597 l
132.843 200.534 l
134.480 198.663 l
136.270 196.629 l
137.815 194.884 l
139.575 192.908 l
141.275 191.011 l
142.973 189.126 l
144.666 187.261 l
146.292 185.480 l
148.049 183.568 l
149.724 181.758 l
151.487 179.866 l
153.083 178.166 l
154.847 176.300 l
156.536 174.526 l
158.221 172.769 l
159.982 170.949 l
161.603 169.285 l
163.263 167.595 l
165.097 165.744 l
166.757 164.083 l
168.454 162.398 l
170.180 160.699 l
171.767 159.152 l
173.459 157.516 l
175.138 155.908 l
176.933 154.204 l
178.518 152.715 l
180.346 151.014 l
181.996 149.495 l
183.628 148.006 l
185.384 146.422 l
187.146 144.849 l
188.750 143.433 l
190.453 141.945 l
192.115 140.510 l
193.917 138.972 l
195.475 137.657 l
197.266 136.164 l
198.949 134.778 l
200.616 133.423 l
202.284 132.083 l
203.985 130.734 l
205.789 129.324 l
207.442 128.049 l
209.075 126.807 l
210.820 125.498 l
212.561 124.211 l
214.124 123.073 l
215.975 121.745 l
217.524 120.651 l
219.335 119.391 l
221.065 118.209 l
222.609 117.170 l
224.345 116.021 l
226.093 114.884 l
227.832 113.773 l
229.445 112.762 l
231.115 111.733 l
232.842 110.689 l
234.563 109.670 l
236.334 108.642 l
237.894 107.755 l
239.649 106.776 l
241.412 105.816 l
243.111 104.911 l
244.654 104.107 l
246.489 103.173 l
248.043 102.401 l
249.851 101.524 l
251.451 100.768 l
253.207 99.9596 l
254.879 99.2106 l
256.623 98.4508 l
258.225 97.7726 l
259.953 97.0623 l
261.748 96.3477 l
263.310 95.7451 l
264.997 95.1146 l
266.741 94.4854 l
268.446 93.8918 l
270.096 93.3382 l
271.928 92.7474 l
273.574 92.2381 l
275.332 91.7168 l
276.925 91.2646 l
278.666 90.7922 l
280.305 90.3688 l
282.017 89.9479 l
283.692 89.5581 l
285.445 89.1729 l
287.133 88.8241 l
288.860 88.4900 l
290.572 88.1812 l
292.145 87.9173 l
293.948 87.6383 l
295.561 87.4099 l
297.281 87.1885 l
298.927 86.9979 l
300.754 86.8108 l
302.337 86.6697 l
304.133 86.5329 l
305.770 86.4301 l
307.561 86.3413 l
309.106 86.2847 l
310.866 86.2427 l
312.565 86.2249 l
314.264 86.2295 l
315.956 86.2563 l
317.582 86.3029 l
319.340 86.3764 l
321.015 86.4686 l
322.778 86.5892 l
324.374 86.7190 l
326.137 86.8855 l
327.827 87.0674 l
329.512 87.2708 l
331.272 87.5067 l
332.894 87.7451 l
334.554 88.0101 l
336.387 88.3274 l
338.047 88.6369 l
339.745 88.9753 l
341.471 89.3421 l
343.058 89.6993 l
344.750 90.1012 l
346.428 90.5215 l
348.224 90.9949 l
349.808 91.4329 l
351.637 91.9619 l
353.287 92.4609 l
354.919 92.9748 l
356.675 93.5498 l
358.437 94.1503 l
360.041 94.7168 l
361.744 95.3395 l
363.406 95.9679 l
365.207 96.6721 l
366.766 97.3008 l
368.557 98.0450 l
370.240 98.7660 l
371.906 99.5004 l
373.575 100.255 l
375.276 101.046 l
377.079 101.908 l
378.733 102.718 l
380.365 103.537 l
382.110 104.434 l
383.851 105.351 l
385.493 106.234 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
48.0000 306.843 m
385.493 306.843 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
210 330 13 15 rc
newpath
216.250 336.250 m
216.458 336.468 216.614 336.692 216.718 336.921  c
216.802 337.067 216.927 337.463 217.093 338.109  c
217.656 337.281 l
217.802 337.072 217.981 336.877 218.195 336.695  c
218.408 336.513 218.593 336.385 218.750 336.312  c
218.854 336.270 218.968 336.250 219.093 336.250  c
219.270 336.250 219.414 336.299 219.523 336.398  c
219.632 336.497 219.687 336.614 219.687 336.750  c
219.687 336.916 219.656 337.031 219.593 337.093  c
219.479 337.197 219.343 337.250 219.187 337.250  c
219.093 337.250 219.000 337.229 218.906 337.187  c
218.708 337.125 218.572 337.093 218.500 337.093  c
218.395 337.093 218.276 337.151 218.140 337.265  c
217.880 337.484 217.567 337.911 217.203 338.546  c
217.718 340.718 l
217.802 341.052 217.869 341.252 217.921 341.320  c
217.974 341.388 218.031 341.421 218.093 341.421  c
218.177 341.421 218.281 341.375 218.406 341.281  c
218.635 341.083 218.833 340.828 219.000 340.515  c
219.218 340.625 l
218.947 341.125 218.609 341.541 218.203 341.875  c
217.974 342.062 217.776 342.156 217.609 342.156  c
217.369 342.156 217.182 342.020 217.046 341.750  c
216.953 341.583 216.770 340.875 216.500 339.625  c
215.833 340.770 215.302 341.505 214.906 341.828  c
214.645 342.046 214.395 342.156 214.156 342.156  c
213.989 342.156 213.833 342.093 213.687 341.968  c
213.593 341.875 213.546 341.750 213.546 341.593  c
213.546 341.458 213.593 341.343 213.687 341.250  c
213.781 341.156 213.895 341.109 214.031 341.109  c
214.166 341.109 214.307 341.177 214.453 341.312  c
214.567 341.406 214.656 341.453 214.718 341.453  c
214.760 341.453 214.822 341.421 214.906 341.359  c
215.104 341.192 215.375 340.843 215.718 340.312  c
216.062 339.781 216.286 339.395 216.390 339.156  c
216.130 338.125 215.989 337.583 215.968 337.531  c
215.875 337.250 215.750 337.052 215.593 336.937  c
215.437 336.822 215.203 336.765 214.890 336.765  c
214.796 336.765 214.687 336.770 214.562 336.781  c
214.562 336.546 l
216.250 336.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
1.00000 w
2 J
0 j
newpath
48.0000 306.843 m
48.0000 310.843 l
S
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
132.373 306.843 m
132.373 310.843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
128.546 326.093 m
128.546 324.958 128.716 323.981 129.054 323.164  c
129.393 322.346 129.849 321.739 130.421 321.343  c
130.859 321.020 131.312 320.859 131.781 320.859  c
132.541 320.859 133.224 321.250 133.828 322.031  c
134.588 322.989 134.968 324.291 134.968 325.937  c
134.968 327.093 134.802 328.072 134.468 328.875  c
134.135 329.677 133.710 330.260 133.195 330.625  c
132.679 330.989 132.182 331.171 131.703 331.171  c
130.755 331.171 129.968 330.614 129.343 329.500  c
128.812 328.552 128.546 327.416 128.546 326.093  c
h
129.984 326.281 m
129.984 327.645 130.151 328.760 130.484 329.625  c
130.765 330.354 131.182 330.718 131.734 330.718  c
131.994 330.718 132.265 330.599 132.546 330.359  c
132.828 330.119 133.041 329.724 133.187 329.171  c
133.416 328.328 133.531 327.140 133.531 325.609  c
133.531 324.484 133.411 323.541 133.171 322.781  c
133.005 322.218 132.781 321.822 132.500 321.593  c
132.302 321.427 132.057 321.343 131.765 321.343  c
131.442 321.343 131.151 321.494 130.890 321.796  c
130.536 322.203 130.296 322.841 130.171 323.710  c
130.046 324.580 129.984 325.437 129.984 326.281  c
h
137.375 329.578 m
137.604 329.578 137.796 329.658 137.953 329.820  c
138.109 329.981 138.187 330.171 138.187 330.390  c
138.187 330.619 138.109 330.812 137.953 330.968  c
137.796 331.125 137.604 331.203 137.375 331.203  c
137.145 331.203 136.953 331.125 136.796 330.968  c
136.640 330.812 136.562 330.619 136.562 330.390  c
136.562 330.161 136.640 329.968 136.796 329.812  c
136.953 329.656 137.145 329.578 137.375 329.578  c
h
145.765 321.062 m
145.187 322.312 l
142.203 322.312 l
141.546 323.640 l
142.838 323.838 143.864 324.322 144.625 325.093  c
145.270 325.750 145.593 326.531 145.593 327.437  c
145.593 327.958 145.489 328.440 145.281 328.882  c
145.072 329.325 144.807 329.703 144.484 330.015  c
144.161 330.328 143.802 330.578 143.406 330.765  c
142.843 331.036 142.265 331.171 141.671 331.171  c
141.078 331.171 140.645 331.070 140.375 330.867  c
140.104 330.664 139.968 330.442 139.968 330.203  c
139.968 330.067 140.026 329.947 140.140 329.843  c
140.255 329.739 140.395 329.687 140.562 329.687  c
140.687 329.687 140.796 329.705 140.890 329.742  c
140.984 329.778 141.145 329.880 141.375 330.046  c
141.750 330.296 142.125 330.421 142.500 330.421  c
143.072 330.421 143.572 330.205 144.000 329.773  c
144.427 329.341 144.640 328.812 144.640 328.187  c
144.640 327.593 144.447 327.036 144.062 326.515  c
143.677 325.994 143.145 325.593 142.468 325.312  c
141.937 325.093 141.213 324.963 140.296 324.921  c
142.203 321.062 l
145.765 321.062 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
216.746 306.843 m
216.746 310.843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
219.765 322.046 m
222.171 320.859 l
222.421 320.859 l
222.421 329.250 l
222.421 329.802 222.445 330.148 222.492 330.289  c
222.539 330.429 222.635 330.536 222.781 330.609  c
222.927 330.682 223.224 330.724 223.671 330.734  c
223.671 331.000 l
219.937 331.000 l
219.937 330.734 l
220.406 330.724 220.708 330.682 220.843 330.609  c
220.979 330.536 221.072 330.440 221.125 330.320  c
221.177 330.200 221.203 329.843 221.203 329.250  c
221.203 323.890 l
221.203 323.161 221.182 322.697 221.140 322.500  c
221.099 322.343 221.033 322.229 220.945 322.156  c
220.856 322.083 220.750 322.046 220.625 322.046  c
220.437 322.046 220.187 322.119 219.875 322.265  c
219.765 322.046 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
301.120 306.843 m
301.120 310.843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
298.765 322.046 m
301.171 320.859 l
301.421 320.859 l
301.421 329.250 l
301.421 329.802 301.445 330.148 301.492 330.289  c
301.539 330.429 301.635 330.536 301.781 330.609  c
301.927 330.682 302.224 330.724 302.671 330.734  c
302.671 331.000 l
298.937 331.000 l
298.937 330.734 l
299.406 330.724 299.708 330.682 299.843 330.609  c
299.979 330.536 300.072 330.440 300.125 330.320  c
300.177 330.200 300.203 329.843 300.203 329.250  c
300.203 323.890 l
300.203 323.161 300.182 322.697 300.140 322.500  c
300.099 322.343 300.033 322.229 299.945 322.156  c
299.856 322.083 299.750 322.046 299.625 322.046  c
299.437 322.046 299.187 322.119 298.875 322.265  c
298.765 322.046 l
h
306.375 329.578 m
306.604 329.578 306.796 329.658 306.953 329.820  c
307.109 329.981 307.187 330.171 307.187 330.390  c
307.187 330.619 307.109 330.812 306.953 330.968  c
306.796 331.125 306.604 331.203 306.375 331.203  c
306.145 331.203 305.953 331.125 305.796 330.968  c
305.640 330.812 305.562 330.619 305.562 330.390  c
305.562 330.161 305.640 329.968 305.796 329.812  c
305.953 329.656 306.145 329.578 306.375 329.578  c
h
314.765 321.062 m
314.187 322.312 l
311.203 322.312 l
310.546 323.640 l
311.838 323.838 312.864 324.322 313.625 325.093  c
314.270 325.750 314.593 326.531 314.593 327.437  c
314.593 327.958 314.489 328.440 314.281 328.882  c
314.072 329.325 313.807 329.703 313.484 330.015  c
313.161 330.328 312.802 330.578 312.406 330.765  c
311.843 331.036 311.265 331.171 310.671 331.171  c
310.078 331.171 309.645 331.070 309.375 330.867  c
309.104 330.664 308.968 330.442 308.968 330.203  c
308.968 330.067 309.026 329.947 309.140 329.843  c
309.255 329.739 309.395 329.687 309.562 329.687  c
309.687 329.687 309.796 329.705 309.890 329.742  c
309.984 329.778 310.145 329.880 310.375 330.046  c
310.750 330.296 311.125 330.421 311.500 330.421  c
312.072 330.421 312.572 330.205 313.000 329.773  c
313.427 329.341 313.640 328.812 313.640 328.187  c
313.640 327.593 313.447 327.036 313.062 326.515  c
312.677 325.994 312.145 325.593 311.468 325.312  c
310.937 325.093 310.213 324.963 309.296 324.921  c
311.203 321.062 l
314.765 321.062 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
385.493 306.843 m
385.493 310.843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
393.875 329.093 m
393.187 331.000 l
387.328 331.000 l
387.328 330.734 l
389.046 329.161 390.257 327.875 390.960 326.875  c
391.664 325.875 392.015 324.963 392.015 324.140  c
392.015 323.515 391.822 323.000 391.437 322.593  c
391.052 322.187 390.588 321.984 390.046 321.984  c
389.567 321.984 389.132 322.127 388.742 322.414  c
388.351 322.700 388.062 323.119 387.875 323.671  c
387.609 323.671 l
387.734 322.765 388.049 322.070 388.554 321.585  c
389.059 321.101 389.687 320.859 390.437 320.859  c
391.250 320.859 391.924 321.119 392.460 321.640  c
392.997 322.161 393.265 322.770 393.265 323.468  c
393.265 323.968 393.151 324.474 392.921 324.984  c
392.557 325.776 391.968 326.609 391.156 327.484  c
389.947 328.817 389.187 329.619 388.875 329.890  c
391.468 329.890 l
392.000 329.890 392.372 329.872 392.585 329.835  c
392.799 329.799 392.992 329.721 393.164 329.601  c
393.335 329.481 393.484 329.312 393.609 329.093  c
393.875 329.093 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
64.8746 306.843 m
64.8746 308.843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
81.7493 306.843 m
81.7493 308.843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
98.6240 306.843 m
98.6240 308.843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
115.498 306.843 m
115.498 308.843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
149.248 306.843 m
149.248 308.843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
166.122 306.843 m
166.122 308.843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
182.997 306.843 m
182.997 308.843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
199.872 306.843 m
199.872 308.843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
233.621 306.843 m
233.621 308.843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
250.496 306.843 m
250.496 308.843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
267.370 306.843 m
267.370 308.843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
284.245 306.843 m
284.245 308.843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
317.994 306.843 m
317.994 308.843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
334.869 306.843 m
334.869 308.843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
351.744 306.843 m
351.744 308.843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
368.618 306.843 m
368.618 308.843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
Q
2 J
0 j
q
0 J
1 j
newpath
48.0000 388.000 m
48.0000 1.00000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
1 146 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
1.00000 w
2 J
0 j
newpath
48.0000 350.967 m
44.0000 350.967 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
18 348 8 16 rc
newpath
30.4531 356.890 m
20.5468 356.890 l
20.5468 356.109 l
30.4531 356.109 l
30.4531 356.890 l
h
f
Q
newpath
28.5468 356.093 m
28.5468 354.958 28.7161 353.981 29.0546 353.164  c
29.3932 352.346 29.8489 351.739 30.4218 351.343  c
30.8593 351.020 31.3125 350.859 31.7812 350.859  c
32.5416 350.859 33.2239 351.250 33.8281 352.031  c
34.5885 352.989 34.9687 354.291 34.9687 355.937  c
34.9687 357.093 34.8020 358.072 34.4687 358.875  c
34.1354 359.677 33.7109 360.260 33.1953 360.625  c
32.6796 360.989 32.1822 361.171 31.7031 361.171  c
30.7552 361.171 29.9687 360.614 29.3437 359.500  c
28.8125 358.552 28.5468 357.416 28.5468 356.093  c
h
29.9843 356.281 m
29.9843 357.645 30.1510 358.760 30.4843 359.625  c
30.7656 360.354 31.1822 360.718 31.7343 360.718  c
31.9947 360.718 32.2656 360.599 32.5468 360.359  c
32.8281 360.119 33.0416 359.724 33.1875 359.171  c
33.4166 358.328 33.5312 357.140 33.5312 355.609  c
33.5312 354.484 33.4114 353.541 33.1718 352.781  c
33.0052 352.218 32.7812 351.822 32.5000 351.593  c
32.3020 351.427 32.0572 351.343 31.7656 351.343  c
31.4427 351.343 31.1510 351.494 30.8906 351.796  c
30.5364 352.203 30.2968 352.841 30.1718 353.710  c
30.0468 354.580 29.9843 355.437 29.9843 356.281  c
h
37.3750 359.578 m
37.6041 359.578 37.7968 359.658 37.9531 359.820  c
38.1093 359.981 38.1875 360.171 38.1875 360.390  c
38.1875 360.619 38.1093 360.812 37.9531 360.968  c
37.7968 361.125 37.6041 361.203 37.3750 361.203  c
37.1458 361.203 36.9531 361.125 36.7968 360.968  c
36.6406 360.812 36.5625 360.619 36.5625 360.390  c
36.5625 360.161 36.6406 359.968 36.7968 359.812  c
36.9531 359.656 37.1458 359.578 37.3750 359.578  c
h
46.1250 359.093 m
45.4375 361.000 l
39.5781 361.000 l
39.5781 360.734 l
41.2968 359.161 42.5078 357.875 43.2109 356.875  c
43.9140 355.875 44.2656 354.963 44.2656 354.140  c
44.2656 353.515 44.0729 353.000 43.6875 352.593  c
43.3020 352.187 42.8385 351.984 42.2968 351.984  c
41.8177 351.984 41.3828 352.127 40.9921 352.414  c
40.6015 352.700 40.3125 353.119 40.1250 353.671  c
39.8593 353.671 l
39.9843 352.765 40.2994 352.070 40.8046 351.585  c
41.3099 351.101 41.9375 350.859 42.6875 350.859  c
43.5000 350.859 44.1744 351.119 44.7109 351.640  c
45.2474 352.161 45.5156 352.770 45.5156 353.468  c
45.5156 353.968 45.4010 354.474 45.1718 354.984  c
44.8072 355.776 44.2187 356.609 43.4062 357.484  c
42.1979 358.817 41.4375 359.619 41.1250 359.890  c
43.7187 359.890 l
44.2500 359.890 44.6224 359.872 44.8359 359.835  c
45.0494 359.799 45.2421 359.721 45.4140 359.601  c
45.5859 359.481 45.7343 359.312 45.8593 359.093  c
46.1250 359.093 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
48.0000 306.843 m
44.0000 306.843 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
39.5468 312.093 m
39.5468 310.958 39.7161 309.981 40.0546 309.164  c
40.3932 308.346 40.8489 307.739 41.4218 307.343  c
41.8593 307.020 42.3125 306.859 42.7812 306.859  c
43.5416 306.859 44.2239 307.250 44.8281 308.031  c
45.5885 308.989 45.9687 310.291 45.9687 311.937  c
45.9687 313.093 45.8020 314.072 45.4687 314.875  c
45.1354 315.677 44.7109 316.260 44.1953 316.625  c
43.6796 316.989 43.1822 317.171 42.7031 317.171  c
41.7552 317.171 40.9687 316.614 40.3437 315.500  c
39.8125 314.552 39.5468 313.416 39.5468 312.093  c
h
40.9843 312.281 m
40.9843 313.645 41.1510 314.760 41.4843 315.625  c
41.7656 316.354 42.1822 316.718 42.7343 316.718  c
42.9947 316.718 43.2656 316.599 43.5468 316.359  c
43.8281 316.119 44.0416 315.724 44.1875 315.171  c
44.4166 314.328 44.5312 313.140 44.5312 311.609  c
44.5312 310.484 44.4114 309.541 44.1718 308.781  c
44.0052 308.218 43.7812 307.822 43.5000 307.593  c
43.3020 307.427 43.0572 307.343 42.7656 307.343  c
42.4427 307.343 42.1510 307.494 41.8906 307.796  c
41.5364 308.203 41.2968 308.841 41.1718 309.710  c
41.0468 310.580 40.9843 311.437 40.9843 312.281  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
48.0000 262.719 m
44.0000 262.719 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.5468 268.093 m
28.5468 266.958 28.7161 265.981 29.0546 265.164  c
29.3932 264.346 29.8489 263.739 30.4218 263.343  c
30.8593 263.020 31.3125 262.859 31.7812 262.859  c
32.5416 262.859 33.2239 263.250 33.8281 264.031  c
34.5885 264.989 34.9687 266.291 34.9687 267.937  c
34.9687 269.093 34.8020 270.072 34.4687 270.875  c
34.1354 271.677 33.7109 272.260 33.1953 272.625  c
32.6796 272.989 32.1822 273.171 31.7031 273.171  c
30.7552 273.171 29.9687 272.614 29.3437 271.500  c
28.8125 270.552 28.5468 269.416 28.5468 268.093  c
h
29.9843 268.281 m
29.9843 269.645 30.1510 270.760 30.4843 271.625  c
30.7656 272.354 31.1822 272.718 31.7343 272.718  c
31.9947 272.718 32.2656 272.599 32.5468 272.359  c
32.8281 272.119 33.0416 271.724 33.1875 271.171  c
33.4166 270.328 33.5312 269.140 33.5312 267.609  c
33.5312 266.484 33.4114 265.541 33.1718 264.781  c
33.0052 264.218 32.7812 263.822 32.5000 263.593  c
32.3020 263.427 32.0572 263.343 31.7656 263.343  c
31.4427 263.343 31.1510 263.494 30.8906 263.796  c
30.5364 264.203 30.2968 264.841 30.1718 265.710  c
30.0468 266.580 29.9843 267.437 29.9843 268.281  c
h
37.3750 271.578 m
37.6041 271.578 37.7968 271.658 37.9531 271.820  c
38.1093 271.981 38.1875 272.171 38.1875 272.390  c
38.1875 272.619 38.1093 272.812 37.9531 272.968  c
37.7968 273.125 37.6041 273.203 37.3750 273.203  c
37.1458 273.203 36.9531 273.125 36.7968 272.968  c
36.6406 272.812 36.5625 272.619 36.5625 272.390  c
36.5625 272.161 36.6406 271.968 36.7968 271.812  c
36.9531 271.656 37.1458 271.578 37.3750 271.578  c
h
46.1250 271.093 m
45.4375 273.000 l
39.5781 273.000 l
39.5781 272.734 l
41.2968 271.161 42.5078 269.875 43.2109 268.875  c
43.9140 267.875 44.2656 266.963 44.2656 266.140  c
44.2656 265.515 44.0729 265.000 43.6875 264.593  c
43.3020 264.187 42.8385 263.984 42.2968 263.984  c
41.8177 263.984 41.3828 264.127 40.9921 264.414  c
40.6015 264.700 40.3125 265.119 40.1250 265.671  c
39.8593 265.671 l
39.9843 264.765 40.2994 264.070 40.8046 263.585  c
41.3099 263.101 41.9375 262.859 42.6875 262.859  c
43.5000 262.859 44.1744 263.119 44.7109 263.640  c
45.2474 264.161 45.5156 264.770 45.5156 265.468  c
45.5156 265.968 45.4010 266.474 45.1718 266.984  c
44.8072 267.776 44.2187 268.609 43.4062 269.484  c
42.1979 270.817 41.4375 271.619 41.1250 271.890  c
43.7187 271.890 l
44.2500 271.890 44.6224 271.872 44.8359 271.835  c
45.0494 271.799 45.2421 271.721 45.4140 271.601  c
45.5859 271.481 45.7343 271.312 45.8593 271.093  c
46.1250 271.093 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
48.0000 218.595 m
44.0000 218.595 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.5468 224.093 m
28.5468 222.958 28.7161 221.981 29.0546 221.164  c
29.3932 220.346 29.8489 219.739 30.4218 219.343  c
30.8593 219.020 31.3125 218.859 31.7812 218.859  c
32.5416 218.859 33.2239 219.250 33.8281 220.031  c
34.5885 220.989 34.9687 222.291 34.9687 223.937  c
34.9687 225.093 34.8020 226.072 34.4687 226.875  c
34.1354 227.677 33.7109 228.260 33.1953 228.625  c
32.6796 228.989 32.1822 229.171 31.7031 229.171  c
30.7552 229.171 29.9687 228.614 29.3437 227.500  c
28.8125 226.552 28.5468 225.416 28.5468 224.093  c
h
29.9843 224.281 m
29.9843 225.645 30.1510 226.760 30.4843 227.625  c
30.7656 228.354 31.1822 228.718 31.7343 228.718  c
31.9947 228.718 32.2656 228.599 32.5468 228.359  c
32.8281 228.119 33.0416 227.724 33.1875 227.171  c
33.4166 226.328 33.5312 225.140 33.5312 223.609  c
33.5312 222.484 33.4114 221.541 33.1718 220.781  c
33.0052 220.218 32.7812 219.822 32.5000 219.593  c
32.3020 219.427 32.0572 219.343 31.7656 219.343  c
31.4427 219.343 31.1510 219.494 30.8906 219.796  c
30.5364 220.203 30.2968 220.841 30.1718 221.710  c
30.0468 222.580 29.9843 223.437 29.9843 224.281  c
h
37.3750 227.578 m
37.6041 227.578 37.7968 227.658 37.9531 227.820  c
38.1093 227.981 38.1875 228.171 38.1875 228.390  c
38.1875 228.619 38.1093 228.812 37.9531 228.968  c
37.7968 229.125 37.6041 229.203 37.3750 229.203  c
37.1458 229.203 36.9531 229.125 36.7968 228.968  c
36.6406 228.812 36.5625 228.619 36.5625 228.390  c
36.5625 228.161 36.6406 227.968 36.7968 227.812  c
36.9531 227.656 37.1458 227.578 37.3750 227.578  c
h
46.2343 225.343 m
46.2343 226.375 l
44.8906 226.375 l
44.8906 229.000 l
43.6875 229.000 l
43.6875 226.375 l
39.4843 226.375 l
39.4843 225.437 l
44.0937 218.859 l
44.8906 218.859 l
44.8906 225.343 l
46.2343 225.343 l
h
43.6875 225.343 m
43.6875 220.406 l
40.2031 225.343 l
43.6875 225.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
48.0000 174.471 m
44.0000 174.471 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.5468 180.093 m
28.5468 178.958 28.7161 177.981 29.0546 177.164  c
29.3932 176.346 29.8489 175.739 30.4218 175.343  c
30.8593 175.020 31.3125 174.859 31.7812 174.859  c
32.5416 174.859 33.2239 175.250 33.8281 176.031  c
34.5885 176.989 34.9687 178.291 34.9687 179.937  c
34.9687 181.093 34.8020 182.072 34.4687 182.875  c
34.1354 183.677 33.7109 184.260 33.1953 184.625  c
32.6796 184.989 32.1822 185.171 31.7031 185.171  c
30.7552 185.171 29.9687 184.614 29.3437 183.500  c
28.8125 182.552 28.5468 181.416 28.5468 180.093  c
h
29.9843 180.281 m
29.9843 181.645 30.1510 182.760 30.4843 183.625  c
30.7656 184.354 31.1822 184.718 31.7343 184.718  c
31.9947 184.718 32.2656 184.599 32.5468 184.359  c
32.8281 184.119 33.0416 183.724 33.1875 183.171  c
33.4166 182.328 33.5312 181.140 33.5312 179.609  c
33.5312 178.484 33.4114 177.541 33.1718 176.781  c
33.0052 176.218 32.7812 175.822 32.5000 175.593  c
32.3020 175.427 32.0572 175.343 31.7656 175.343  c
31.4427 175.343 31.1510 175.494 30.8906 175.796  c
30.5364 176.203 30.2968 176.841 30.1718 177.710  c
30.0468 178.580 29.9843 179.437 29.9843 180.281  c
h
37.3750 183.578 m
37.6041 183.578 37.7968 183.658 37.9531 183.820  c
38.1093 183.981 38.1875 184.171 38.1875 184.390  c
38.1875 184.619 38.1093 184.812 37.9531 184.968  c
37.7968 185.125 37.6041 185.203 37.3750 185.203  c
37.1458 185.203 36.9531 185.125 36.7968 184.968  c
36.6406 184.812 36.5625 184.619 36.5625 184.390  c
36.5625 184.161 36.6406 183.968 36.7968 183.812  c
36.9531 183.656 37.1458 183.578 37.3750 183.578  c
h
45.9687 174.859 m
45.9687 175.140 l
45.3229 175.203 44.7968 175.330 44.3906 175.523  c
43.9843 175.716 43.5833 176.010 43.1875 176.406  c
42.7916 176.802 42.4635 177.242 42.2031 177.726  c
41.9427 178.210 41.7239 178.786 41.5468 179.453  c
42.2447 178.974 42.9479 178.734 43.6562 178.734  c
44.3333 178.734 44.9218 179.007 45.4218 179.554  c
45.9218 180.101 46.1718 180.802 46.1718 181.656  c
46.1718 182.489 45.9218 183.250 45.4218 183.937  c
44.8177 184.760 44.0156 185.171 43.0156 185.171  c
42.3385 185.171 41.7604 184.947 41.2812 184.500  c
40.3541 183.625 39.8906 182.494 39.8906 181.109  c
39.8906 180.213 40.0703 179.367 40.4296 178.570  c
40.7890 177.773 41.2994 177.062 41.9609 176.437  c
42.6224 175.812 43.2552 175.393 43.8593 175.179  c
44.4635 174.966 45.0260 174.859 45.5468 174.859  c
45.9687 174.859 l
h
41.4218 179.984 m
41.3281 180.651 41.2812 181.187 41.2812 181.593  c
41.2812 182.062 41.3697 182.570 41.5468 183.117  c
41.7239 183.664 41.9791 184.099 42.3125 184.421  c
42.5625 184.651 42.8697 184.765 43.2343 184.765  c
43.6510 184.765 44.0286 184.565 44.3671 184.164  c
44.7057 183.763 44.8750 183.192 44.8750 182.453  c
44.8750 181.619 44.7083 180.898 44.3750 180.289  c
44.0416 179.679 43.5677 179.375 42.9531 179.375  c
42.7656 179.375 42.5677 179.414 42.3593 179.492  c
42.1510 179.570 41.8385 179.734 41.4218 179.984  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
48.0000 130.347 m
44.0000 130.347 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.5468 136.093 m
28.5468 134.958 28.7161 133.981 29.0546 133.164  c
29.3932 132.346 29.8489 131.739 30.4218 131.343  c
30.8593 131.020 31.3125 130.859 31.7812 130.859  c
32.5416 130.859 33.2239 131.250 33.8281 132.031  c
34.5885 132.989 34.9687 134.291 34.9687 135.937  c
34.9687 137.093 34.8020 138.072 34.4687 138.875  c
34.1354 139.677 33.7109 140.260 33.1953 140.625  c
32.6796 140.989 32.1822 141.171 31.7031 141.171  c
30.7552 141.171 29.9687 140.614 29.3437 139.500  c
28.8125 138.552 28.5468 137.416 28.5468 136.093  c
h
29.9843 136.281 m
29.9843 137.645 30.1510 138.760 30.4843 139.625  c
30.7656 140.354 31.1822 140.718 31.7343 140.718  c
31.9947 140.718 32.2656 140.599 32.5468 140.359  c
32.8281 140.119 33.0416 139.724 33.1875 139.171  c
33.4166 138.328 33.5312 137.140 33.5312 135.609  c
33.5312 134.484 33.4114 133.541 33.1718 132.781  c
33.0052 132.218 32.7812 131.822 32.5000 131.593  c
32.3020 131.427 32.0572 131.343 31.7656 131.343  c
31.4427 131.343 31.1510 131.494 30.8906 131.796  c
30.5364 132.203 30.2968 132.841 30.1718 133.710  c
30.0468 134.580 29.9843 135.437 29.9843 136.281  c
h
37.3750 139.578 m
37.6041 139.578 37.7968 139.658 37.9531 139.820  c
38.1093 139.981 38.1875 140.171 38.1875 140.390  c
38.1875 140.619 38.1093 140.812 37.9531 140.968  c
37.7968 141.125 37.6041 141.203 37.3750 141.203  c
37.1458 141.203 36.9531 141.125 36.7968 140.968  c
36.6406 140.812 36.5625 140.619 36.5625 140.390  c
36.5625 140.161 36.6406 139.968 36.7968 139.812  c
36.9531 139.656 37.1458 139.578 37.3750 139.578  c
h
42.1250 136.000 m
41.3437 135.354 40.8385 134.835 40.6093 134.445  c
40.3802 134.054 40.2656 133.651 40.2656 133.234  c
40.2656 132.588 40.5156 132.031 41.0156 131.562  c
41.5156 131.093 42.1770 130.859 43.0000 130.859  c
43.8020 130.859 44.4479 131.078 44.9375 131.515  c
45.4270 131.953 45.6718 132.447 45.6718 133.000  c
45.6718 133.375 45.5390 133.755 45.2734 134.140  c
45.0078 134.526 44.4583 134.979 43.6250 135.500  c
44.4791 136.166 45.0468 136.687 45.3281 137.062  c
45.7031 137.562 45.8906 138.088 45.8906 138.640  c
45.8906 139.338 45.6250 139.934 45.0937 140.429  c
44.5625 140.924 43.8645 141.171 43.0000 141.171  c
42.0520 141.171 41.3125 140.880 40.7812 140.296  c
40.3645 139.817 40.1562 139.296 40.1562 138.734  c
40.1562 138.296 40.3046 137.862 40.6015 137.429  c
40.8984 136.997 41.4062 136.520 42.1250 136.000  c
h
43.2812 135.218 m
43.8645 134.687 44.2343 134.268 44.3906 133.960  c
44.5468 133.653 44.6250 133.307 44.6250 132.921  c
44.6250 132.411 44.4817 132.010 44.1953 131.718  c
43.9088 131.427 43.5156 131.281 43.0156 131.281  c
42.5156 131.281 42.1093 131.427 41.7968 131.718  c
41.4843 132.010 41.3281 132.349 41.3281 132.734  c
41.3281 132.984 41.3932 133.237 41.5234 133.492  c
41.6536 133.747 41.8385 133.989 42.0781 134.218  c
43.2812 135.218 l
h
42.4687 136.281 m
42.0625 136.614 41.7630 136.984 41.5703 137.390  c
41.3776 137.796 41.2812 138.234 41.2812 138.703  c
41.2812 139.328 41.4531 139.830 41.7968 140.210  c
42.1406 140.591 42.5781 140.781 43.1093 140.781  c
43.6406 140.781 44.0651 140.632 44.3828 140.335  c
44.7005 140.039 44.8593 139.677 44.8593 139.250  c
44.8593 138.895 44.7656 138.578 44.5781 138.296  c
44.2343 137.786 43.5312 137.114 42.4687 136.281  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
48.0000 86.2239 m
44.0000 86.2239 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
29.7656 88.0468 m
32.1718 86.8593 l
32.4218 86.8593 l
32.4218 95.2500 l
32.4218 95.8020 32.4453 96.1484 32.4921 96.2890  c
32.5390 96.4296 32.6354 96.5364 32.7812 96.6093  c
32.9270 96.6822 33.2239 96.7239 33.6718 96.7343  c
33.6718 97.0000 l
29.9375 97.0000 l
29.9375 96.7343 l
30.4062 96.7239 30.7083 96.6822 30.8437 96.6093  c
30.9791 96.5364 31.0729 96.4401 31.1250 96.3203  c
31.1770 96.2005 31.2031 95.8437 31.2031 95.2500  c
31.2031 89.8906 l
31.2031 89.1614 31.1822 88.6979 31.1406 88.5000  c
31.0989 88.3437 31.0338 88.2291 30.9453 88.1562  c
30.8567 88.0833 30.7500 88.0468 30.6250 88.0468  c
30.4375 88.0468 30.1875 88.1197 29.8750 88.2656  c
29.7656 88.0468 l
h
37.3750 95.5781 m
37.6041 95.5781 37.7968 95.6588 37.9531 95.8203  c
38.1093 95.9817 38.1875 96.1718 38.1875 96.3906  c
38.1875 96.6197 38.1093 96.8125 37.9531 96.9687  c
37.7968 97.1250 37.6041 97.2031 37.3750 97.2031  c
37.1458 97.2031 36.9531 97.1250 36.7968 96.9687  c
36.6406 96.8125 36.5625 96.6197 36.5625 96.3906  c
36.5625 96.1614 36.6406 95.9687 36.7968 95.8125  c
36.9531 95.6562 37.1458 95.5781 37.3750 95.5781  c
h
39.7968 92.0937 m
39.7968 90.9583 39.9661 89.9817 40.3046 89.1640  c
40.6432 88.3463 41.0989 87.7395 41.6718 87.3437  c
42.1093 87.0208 42.5625 86.8593 43.0312 86.8593  c
43.7916 86.8593 44.4739 87.2500 45.0781 88.0312  c
45.8385 88.9895 46.2187 90.2916 46.2187 91.9375  c
46.2187 93.0937 46.0520 94.0729 45.7187 94.8750  c
45.3854 95.6770 44.9609 96.2604 44.4453 96.6250  c
43.9296 96.9895 43.4322 97.1718 42.9531 97.1718  c
42.0052 97.1718 41.2187 96.6145 40.5937 95.5000  c
40.0625 94.5520 39.7968 93.4166 39.7968 92.0937  c
h
41.2343 92.2812 m
41.2343 93.6458 41.4010 94.7604 41.7343 95.6250  c
42.0156 96.3541 42.4322 96.7187 42.9843 96.7187  c
43.2447 96.7187 43.5156 96.5989 43.7968 96.3593  c
44.0781 96.1197 44.2916 95.7239 44.4375 95.1718  c
44.6666 94.3281 44.7812 93.1406 44.7812 91.6093  c
44.7812 90.4843 44.6614 89.5416 44.4218 88.7812  c
44.2552 88.2187 44.0312 87.8229 43.7500 87.5937  c
43.5520 87.4270 43.3072 87.3437 43.0156 87.3437  c
42.6927 87.3437 42.4010 87.4947 42.1406 87.7968  c
41.7864 88.2031 41.5468 88.8411 41.4218 89.7109  c
41.2968 90.5807 41.2343 91.4375 41.2343 92.2812  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
48.0000 42.1001 m
44.0000 42.1001 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
29.7656 44.0468 m
32.1718 42.8593 l
32.4218 42.8593 l
32.4218 51.2500 l
32.4218 51.8020 32.4453 52.1484 32.4921 52.2890  c
32.5390 52.4296 32.6354 52.5364 32.7812 52.6093  c
32.9270 52.6822 33.2239 52.7239 33.6718 52.7343  c
33.6718 53.0000 l
29.9375 53.0000 l
29.9375 52.7343 l
30.4062 52.7239 30.7083 52.6822 30.8437 52.6093  c
30.9791 52.5364 31.0729 52.4401 31.1250 52.3203  c
31.1770 52.2005 31.2031 51.8437 31.2031 51.2500  c
31.2031 45.8906 l
31.2031 45.1614 31.1822 44.6979 31.1406 44.5000  c
31.0989 44.3437 31.0338 44.2291 30.9453 44.1562  c
30.8567 44.0833 30.7500 44.0468 30.6250 44.0468  c
30.4375 44.0468 30.1875 44.1197 29.8750 44.2656  c
29.7656 44.0468 l
h
37.3750 51.5781 m
37.6041 51.5781 37.7968 51.6588 37.9531 51.8203  c
38.1093 51.9817 38.1875 52.1718 38.1875 52.3906  c
38.1875 52.6197 38.1093 52.8125 37.9531 52.9687  c
37.7968 53.1250 37.6041 53.2031 37.3750 53.2031  c
37.1458 53.2031 36.9531 53.1250 36.7968 52.9687  c
36.6406 52.8125 36.5625 52.6197 36.5625 52.3906  c
36.5625 52.1614 36.6406 51.9687 36.7968 51.8125  c
36.9531 51.6562 37.1458 51.5781 37.3750 51.5781  c
h
46.1250 51.0937 m
45.4375 53.0000 l
39.5781 53.0000 l
39.5781 52.7343 l
41.2968 51.1614 42.5078 49.8750 43.2109 48.8750  c
43.9140 47.8750 44.2656 46.9635 44.2656 46.1406  c
44.2656 45.5156 44.0729 45.0000 43.6875 44.5937  c
43.3020 44.1875 42.8385 43.9843 42.2968 43.9843  c
41.8177 43.9843 41.3828 44.1276 40.9921 44.4140  c
40.6015 44.7005 40.3125 45.1197 40.1250 45.6718  c
39.8593 45.6718 l
39.9843 44.7656 40.2994 44.0703 40.8046 43.5859  c
41.3099 43.1015 41.9375 42.8593 42.6875 42.8593  c
43.5000 42.8593 44.1744 43.1197 44.7109 43.6406  c
45.2474 44.1614 45.5156 44.7708 45.5156 45.4687  c
45.5156 45.9687 45.4010 46.4739 45.1718 46.9843  c
44.8072 47.7760 44.2187 48.6093 43.4062 49.4843  c
42.1979 50.8177 41.4375 51.6197 41.1250 51.8906  c
43.7187 51.8906 l
44.2500 51.8906 44.6224 51.8724 44.8359 51.8359  c
45.0494 51.7994 45.2421 51.7213 45.4140 51.6015  c
45.5859 51.4817 45.7343 51.3125 45.8593 51.0937  c
46.1250 51.0937 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
48.0000 373.028 m
46.0000 373.028 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
48.0000 328.905 m
46.0000 328.905 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
48.0000 284.781 m
46.0000 284.781 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
48.0000 240.657 m
46.0000 240.657 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
48.0000 196.533 m
46.0000 196.533 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
48.0000 152.409 m
46.0000 152.409 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
48.0000 108.285 m
46.0000 108.285 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
48.0000 64.1620 m
46.0000 64.1620 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
48.0000 20.0381 m
46.0000 20.0381 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
